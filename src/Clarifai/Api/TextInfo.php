<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.TextInfo</code>
 */
class TextInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * count of characters in text
     *
     * Generated from protobuf field <code>int32 char_count = 1;</code>
     */
    protected $char_count = 0;
    /**
     * text encoding
     *
     * Generated from protobuf field <code>string encoding = 2;</code>
     */
    protected $encoding = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $char_count
     *           count of characters in text
     *     @type string $encoding
     *           text encoding
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * count of characters in text
     *
     * Generated from protobuf field <code>int32 char_count = 1;</code>
     * @return int
     */
    public function getCharCount()
    {
        return $this->char_count;
    }

    /**
     * count of characters in text
     *
     * Generated from protobuf field <code>int32 char_count = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setCharCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->char_count = $var;

        return $this;
    }

    /**
     * text encoding
     *
     * Generated from protobuf field <code>string encoding = 2;</code>
     * @return string
     */
    public function getEncoding()
    {
        return $this->encoding;
    }

    /**
     * text encoding
     *
     * Generated from protobuf field <code>string encoding = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setEncoding($var)
    {
        GPBUtil::checkString($var, True);
        $this->encoding = $var;

        return $this;
    }

}

