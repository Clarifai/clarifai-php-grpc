<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PostInputsRequest
 *
 * Generated from protobuf message <code>clarifai.api.PostInputsRequest</code>
 */
class PostInputsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     */
    protected $user_app_id = null;
    /**
     * List of inputs to post.
     * For each input, the following fields are used:
     * * id
     * * data
     * * dataset_ids
     *
     * Generated from protobuf field <code>repeated .clarifai.api.Input inputs = 2;</code>
     */
    private $inputs;
    /**
     * Collect statistics about created inputs in job with given ID.
     * * If job ID is empty, then job is not created.
     * * If job ID is non-empty and doesn't already exist, then a new job will be created with given ID.
     * * If job ID does already exist, then new inputs statistics are merged with previous inputs statistics.
     *
     * Generated from protobuf field <code>string inputs_add_job_id = 3;</code>
     */
    protected $inputs_add_job_id = '';
    /**
     * How to handle input ID conflicts.
     *
     * Generated from protobuf field <code>.clarifai.api.InputIDConflictResolution input_id_conflict_resolution = 4;</code>
     */
    protected $input_id_conflict_resolution = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\UserAppIDSet $user_app_id
     *     @type array<\Clarifai\Api\Input>|\Google\Protobuf\Internal\RepeatedField $inputs
     *           List of inputs to post.
     *           For each input, the following fields are used:
     *           * id
     *           * data
     *           * dataset_ids
     *     @type string $inputs_add_job_id
     *           Collect statistics about created inputs in job with given ID.
     *           * If job ID is empty, then job is not created.
     *           * If job ID is non-empty and doesn't already exist, then a new job will be created with given ID.
     *           * If job ID does already exist, then new inputs statistics are merged with previous inputs statistics.
     *     @type int $input_id_conflict_resolution
     *           How to handle input ID conflicts.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @return \Clarifai\Api\UserAppIDSet|null
     */
    public function getUserAppId()
    {
        return $this->user_app_id;
    }

    public function hasUserAppId()
    {
        return isset($this->user_app_id);
    }

    public function clearUserAppId()
    {
        unset($this->user_app_id);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @param \Clarifai\Api\UserAppIDSet $var
     * @return $this
     */
    public function setUserAppId($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\UserAppIDSet::class);
        $this->user_app_id = $var;

        return $this;
    }

    /**
     * List of inputs to post.
     * For each input, the following fields are used:
     * * id
     * * data
     * * dataset_ids
     *
     * Generated from protobuf field <code>repeated .clarifai.api.Input inputs = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInputs()
    {
        return $this->inputs;
    }

    /**
     * List of inputs to post.
     * For each input, the following fields are used:
     * * id
     * * data
     * * dataset_ids
     *
     * Generated from protobuf field <code>repeated .clarifai.api.Input inputs = 2;</code>
     * @param array<\Clarifai\Api\Input>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInputs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Clarifai\Api\Input::class);
        $this->inputs = $arr;

        return $this;
    }

    /**
     * Collect statistics about created inputs in job with given ID.
     * * If job ID is empty, then job is not created.
     * * If job ID is non-empty and doesn't already exist, then a new job will be created with given ID.
     * * If job ID does already exist, then new inputs statistics are merged with previous inputs statistics.
     *
     * Generated from protobuf field <code>string inputs_add_job_id = 3;</code>
     * @return string
     */
    public function getInputsAddJobId()
    {
        return $this->inputs_add_job_id;
    }

    /**
     * Collect statistics about created inputs in job with given ID.
     * * If job ID is empty, then job is not created.
     * * If job ID is non-empty and doesn't already exist, then a new job will be created with given ID.
     * * If job ID does already exist, then new inputs statistics are merged with previous inputs statistics.
     *
     * Generated from protobuf field <code>string inputs_add_job_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setInputsAddJobId($var)
    {
        GPBUtil::checkString($var, True);
        $this->inputs_add_job_id = $var;

        return $this;
    }

    /**
     * How to handle input ID conflicts.
     *
     * Generated from protobuf field <code>.clarifai.api.InputIDConflictResolution input_id_conflict_resolution = 4;</code>
     * @return int
     */
    public function getInputIdConflictResolution()
    {
        return $this->input_id_conflict_resolution;
    }

    /**
     * How to handle input ID conflicts.
     *
     * Generated from protobuf field <code>.clarifai.api.InputIDConflictResolution input_id_conflict_resolution = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setInputIdConflictResolution($var)
    {
        GPBUtil::checkEnum($var, \Clarifai\Api\InputIDConflictResolution::class);
        $this->input_id_conflict_resolution = $var;

        return $this;
    }

}

