<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api\TaskWorker;

use UnexpectedValueException;

/**
 * Protobuf type <code>clarifai.api.TaskWorker.TaskWorkerStrategy</code>
 */
class TaskWorkerStrategy
{
    /**
     * Generated from protobuf enum <code>WORKER_STRATEGY_NOT_SET = 0;</code>
     */
    const WORKER_STRATEGY_NOT_SET = 0;
    /**
     * The inputs will be partitioned in several partitions.
     * Each worker will label one or more input partitions.
     * All inputs are assigned at task creation.
     *
     * Generated from protobuf enum <code>PARTITIONED = 2;</code>
     */
    const PARTITIONED = 2;
    /**
     * Each worker will label all inputs from input source.
     * All inputs are assigned at task creation.
     *
     * Generated from protobuf enum <code>FULL = 3;</code>
     */
    const FULL = 3;
    /**
     * Each worker will dynamically get 10 inputs assigned at a time.
     * No inputs are assigned at task creation.
     *
     * Generated from protobuf enum <code>DYNAMIC = 4;</code>
     */
    const DYNAMIC = 4;

    private static $valueToName = [
        self::WORKER_STRATEGY_NOT_SET => 'WORKER_STRATEGY_NOT_SET',
        self::PARTITIONED => 'PARTITIONED',
        self::FULL => 'FULL',
        self::DYNAMIC => 'DYNAMIC',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TaskWorkerStrategy::class, \Clarifai\Api\TaskWorker_TaskWorkerStrategy::class);

