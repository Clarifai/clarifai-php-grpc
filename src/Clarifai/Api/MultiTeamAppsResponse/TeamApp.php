<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api\MultiTeamAppsResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.MultiTeamAppsResponse.TeamApp</code>
 */
class TeamApp extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string team_id = 1;</code>
     */
    protected $team_id = '';
    /**
     * Generated from protobuf field <code>string role_id = 2;</code>
     */
    protected $role_id = '';
    /**
     *todo(margus) should we get rid of this AppIdentity message? it made sense when teams was global but now that is is org scoped it kind of could be removed
     *
     * Generated from protobuf field <code>.clarifai.api.AppIdentity app = 3;</code>
     */
    protected $app = null;
    /**
     * Generated from protobuf field <code>string app_name = 4;</code>
     */
    protected $app_name = '';
    /**
     * Generated from protobuf field <code>string role_name = 5;</code>
     */
    protected $role_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $team_id
     *     @type string $role_id
     *     @type \Clarifai\Api\AppIdentity $app
     *          todo(margus) should we get rid of this AppIdentity message? it made sense when teams was global but now that is is org scoped it kind of could be removed
     *     @type string $app_name
     *     @type string $role_name
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string team_id = 1;</code>
     * @return string
     */
    public function getTeamId()
    {
        return $this->team_id;
    }

    /**
     * Generated from protobuf field <code>string team_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTeamId($var)
    {
        GPBUtil::checkString($var, True);
        $this->team_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string role_id = 2;</code>
     * @return string
     */
    public function getRoleId()
    {
        return $this->role_id;
    }

    /**
     * Generated from protobuf field <code>string role_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRoleId($var)
    {
        GPBUtil::checkString($var, True);
        $this->role_id = $var;

        return $this;
    }

    /**
     *todo(margus) should we get rid of this AppIdentity message? it made sense when teams was global but now that is is org scoped it kind of could be removed
     *
     * Generated from protobuf field <code>.clarifai.api.AppIdentity app = 3;</code>
     * @return \Clarifai\Api\AppIdentity|null
     */
    public function getApp()
    {
        return $this->app;
    }

    public function hasApp()
    {
        return isset($this->app);
    }

    public function clearApp()
    {
        unset($this->app);
    }

    /**
     *todo(margus) should we get rid of this AppIdentity message? it made sense when teams was global but now that is is org scoped it kind of could be removed
     *
     * Generated from protobuf field <code>.clarifai.api.AppIdentity app = 3;</code>
     * @param \Clarifai\Api\AppIdentity $var
     * @return $this
     */
    public function setApp($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\AppIdentity::class);
        $this->app = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string app_name = 4;</code>
     * @return string
     */
    public function getAppName()
    {
        return $this->app_name;
    }

    /**
     * Generated from protobuf field <code>string app_name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAppName($var)
    {
        GPBUtil::checkString($var, True);
        $this->app_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string role_name = 5;</code>
     * @return string
     */
    public function getRoleName()
    {
        return $this->role_name;
    }

    /**
     * Generated from protobuf field <code>string role_name = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setRoleName($var)
    {
        GPBUtil::checkString($var, True);
        $this->role_name = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TeamApp::class, \Clarifai\Api\MultiTeamAppsResponse_TeamApp::class);

