<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.ReviewStartConfig</code>
 */
class ReviewStartConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Review the work done by these workers.
     * If empty, review the work for all workers.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.Worker workers = 1;</code>
     */
    private $workers;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Clarifai\Api\Worker>|\Google\Protobuf\Internal\RepeatedField $workers
     *           Review the work done by these workers.
     *           If empty, review the work for all workers.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Review the work done by these workers.
     * If empty, review the work for all workers.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.Worker workers = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getWorkers()
    {
        return $this->workers;
    }

    /**
     * Review the work done by these workers.
     * If empty, review the work for all workers.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.Worker workers = 1;</code>
     * @param array<\Clarifai\Api\Worker>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setWorkers($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Clarifai\Api\Worker::class);
        $this->workers = $arr;

        return $this;
    }

}

