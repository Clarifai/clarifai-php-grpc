<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.DatasetVersionMetrics</code>
 */
class DatasetVersionMetrics extends \Google\Protobuf\Internal\Message
{
    /**
     * Number of inputs
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_count = 1;</code>
     */
    protected $inputs_count = null;
    /**
     * Number of unlabeled inputs
     * An input is considered unlabeled if it there are no annotations with positive labels for that input.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value unlabeled_inputs_count = 6;</code>
     */
    protected $unlabeled_inputs_count = null;
    /**
     * Number of inputs that have metadata
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_metadata_count = 8;</code>
     */
    protected $inputs_with_metadata_count = null;
    /**
     * Number of inputs that have geo information
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_geo_count = 9;</code>
     */
    protected $inputs_with_geo_count = null;
    /**
     * Number of regions
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value regions_count = 20;</code>
     */
    protected $regions_count = null;
    /**
     * The matrix shows where the regions are located.
     * Example: If the matrix has 2x2 dimensions, then
     * * region_location_matrix[0][0] = the number of regions that appear in the top left corner, i.e. [0,0]..(0.5,0.5)
     * * region_location_matrix[0][1] = the number of regions that appear in the top right corner, i.e. [0,0.5]..[0.5,1]
     * * region_location_matrix[1][0] = the number of regions that appear in the bottom left corner, i.e. [0.5,0]..[1,0.5)
     * * region_location_matrix[1][1] = the number of regions that appear in the bottom right corner, i.e. [0.5,0.5]..[1,1]
     *
     * Generated from protobuf field <code>.MatrixUint64 region_location_matrix = 21;</code>
     */
    protected $region_location_matrix = null;
    /**
     * Number of bounding boxes
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value bounding_boxes_count = 22;</code>
     */
    protected $bounding_boxes_count = null;
    /**
     * Number of polygons
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value polygons_count = 23;</code>
     */
    protected $polygons_count = null;
    /**
     * Number of points
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value points_count = 24;</code>
     */
    protected $points_count = null;
    /**
     * Number of masks
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value masks_count = 25;</code>
     */
    protected $masks_count = null;
    /**
     * Number of inputs that have regions attached
     * Note that this is not a recursive count: if an input contains frames that contains regions, then the region_frames_count is increased, but region_inputs_count is not increased.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_inputs_count = 60;</code>
     */
    protected $region_inputs_count = null;
    /**
     * Number of frames that have regions attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_frames_count = 61;</code>
     */
    protected $region_frames_count = null;
    /**
     * Number of frames
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frames_count = 30;</code>
     */
    protected $frames_count = null;
    /**
     * Number of inputs that have frames attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frame_inputs_count = 70;</code>
     */
    protected $frame_inputs_count = null;
    /**
     * Number of embeddings
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value embeddings_count = 40;</code>
     */
    protected $embeddings_count = null;
    /**
     * Number of positive tags added at input-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_input_tags_count = 50;</code>
     */
    protected $positive_input_tags_count = null;
    /**
     * Number of positive tags added at region-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_region_tags_count = 51;</code>
     */
    protected $positive_region_tags_count = null;
    /**
     * Number of positive tags added at frame-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_frame_tags_count = 52;</code>
     */
    protected $positive_frame_tags_count = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\UInt64Value $inputs_count
     *           Number of inputs
     *     @type \Google\Protobuf\UInt64Value $unlabeled_inputs_count
     *           Number of unlabeled inputs
     *           An input is considered unlabeled if it there are no annotations with positive labels for that input.
     *     @type \Google\Protobuf\UInt64Value $inputs_with_metadata_count
     *           Number of inputs that have metadata
     *     @type \Google\Protobuf\UInt64Value $inputs_with_geo_count
     *           Number of inputs that have geo information
     *     @type \Google\Protobuf\UInt64Value $regions_count
     *           Number of regions
     *     @type \MatrixUint64 $region_location_matrix
     *           The matrix shows where the regions are located.
     *           Example: If the matrix has 2x2 dimensions, then
     *           * region_location_matrix[0][0] = the number of regions that appear in the top left corner, i.e. [0,0]..(0.5,0.5)
     *           * region_location_matrix[0][1] = the number of regions that appear in the top right corner, i.e. [0,0.5]..[0.5,1]
     *           * region_location_matrix[1][0] = the number of regions that appear in the bottom left corner, i.e. [0.5,0]..[1,0.5)
     *           * region_location_matrix[1][1] = the number of regions that appear in the bottom right corner, i.e. [0.5,0.5]..[1,1]
     *     @type \Google\Protobuf\UInt64Value $bounding_boxes_count
     *           Number of bounding boxes
     *     @type \Google\Protobuf\UInt64Value $polygons_count
     *           Number of polygons
     *     @type \Google\Protobuf\UInt64Value $points_count
     *           Number of points
     *     @type \Google\Protobuf\UInt64Value $masks_count
     *           Number of masks
     *     @type \Google\Protobuf\UInt64Value $region_inputs_count
     *           Number of inputs that have regions attached
     *           Note that this is not a recursive count: if an input contains frames that contains regions, then the region_frames_count is increased, but region_inputs_count is not increased.
     *     @type \Google\Protobuf\UInt64Value $region_frames_count
     *           Number of frames that have regions attached
     *     @type \Google\Protobuf\UInt64Value $frames_count
     *           Number of frames
     *     @type \Google\Protobuf\UInt64Value $frame_inputs_count
     *           Number of inputs that have frames attached
     *     @type \Google\Protobuf\UInt64Value $embeddings_count
     *           Number of embeddings
     *     @type \Google\Protobuf\UInt64Value $positive_input_tags_count
     *           Number of positive tags added at input-level
     *     @type \Google\Protobuf\UInt64Value $positive_region_tags_count
     *           Number of positive tags added at region-level
     *     @type \Google\Protobuf\UInt64Value $positive_frame_tags_count
     *           Number of positive tags added at frame-level
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Number of inputs
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_count = 1;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getInputsCount()
    {
        return $this->inputs_count;
    }

    /**
     * Returns the unboxed value from <code>getInputsCount()</code>

     * Number of inputs
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_count = 1;</code>
     * @return int|string|null
     */
    public function getInputsCountUnwrapped()
    {
        return $this->readWrapperValue("inputs_count");
    }

    /**
     * Number of inputs
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_count = 1;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setInputsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->inputs_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of inputs
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_count = 1;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setInputsCountUnwrapped($var)
    {
        $this->writeWrapperValue("inputs_count", $var);
        return $this;}

    /**
     * Number of unlabeled inputs
     * An input is considered unlabeled if it there are no annotations with positive labels for that input.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value unlabeled_inputs_count = 6;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getUnlabeledInputsCount()
    {
        return $this->unlabeled_inputs_count;
    }

    /**
     * Returns the unboxed value from <code>getUnlabeledInputsCount()</code>

     * Number of unlabeled inputs
     * An input is considered unlabeled if it there are no annotations with positive labels for that input.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value unlabeled_inputs_count = 6;</code>
     * @return int|string|null
     */
    public function getUnlabeledInputsCountUnwrapped()
    {
        return $this->readWrapperValue("unlabeled_inputs_count");
    }

    /**
     * Number of unlabeled inputs
     * An input is considered unlabeled if it there are no annotations with positive labels for that input.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value unlabeled_inputs_count = 6;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setUnlabeledInputsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->unlabeled_inputs_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of unlabeled inputs
     * An input is considered unlabeled if it there are no annotations with positive labels for that input.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value unlabeled_inputs_count = 6;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setUnlabeledInputsCountUnwrapped($var)
    {
        $this->writeWrapperValue("unlabeled_inputs_count", $var);
        return $this;}

    /**
     * Number of inputs that have metadata
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_metadata_count = 8;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getInputsWithMetadataCount()
    {
        return $this->inputs_with_metadata_count;
    }

    /**
     * Returns the unboxed value from <code>getInputsWithMetadataCount()</code>

     * Number of inputs that have metadata
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_metadata_count = 8;</code>
     * @return int|string|null
     */
    public function getInputsWithMetadataCountUnwrapped()
    {
        return $this->readWrapperValue("inputs_with_metadata_count");
    }

    /**
     * Number of inputs that have metadata
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_metadata_count = 8;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setInputsWithMetadataCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->inputs_with_metadata_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of inputs that have metadata
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_metadata_count = 8;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setInputsWithMetadataCountUnwrapped($var)
    {
        $this->writeWrapperValue("inputs_with_metadata_count", $var);
        return $this;}

    /**
     * Number of inputs that have geo information
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_geo_count = 9;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getInputsWithGeoCount()
    {
        return $this->inputs_with_geo_count;
    }

    /**
     * Returns the unboxed value from <code>getInputsWithGeoCount()</code>

     * Number of inputs that have geo information
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_geo_count = 9;</code>
     * @return int|string|null
     */
    public function getInputsWithGeoCountUnwrapped()
    {
        return $this->readWrapperValue("inputs_with_geo_count");
    }

    /**
     * Number of inputs that have geo information
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_geo_count = 9;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setInputsWithGeoCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->inputs_with_geo_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of inputs that have geo information
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value inputs_with_geo_count = 9;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setInputsWithGeoCountUnwrapped($var)
    {
        $this->writeWrapperValue("inputs_with_geo_count", $var);
        return $this;}

    /**
     * Number of regions
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value regions_count = 20;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getRegionsCount()
    {
        return $this->regions_count;
    }

    /**
     * Returns the unboxed value from <code>getRegionsCount()</code>

     * Number of regions
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value regions_count = 20;</code>
     * @return int|string|null
     */
    public function getRegionsCountUnwrapped()
    {
        return $this->readWrapperValue("regions_count");
    }

    /**
     * Number of regions
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value regions_count = 20;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setRegionsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->regions_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of regions
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value regions_count = 20;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setRegionsCountUnwrapped($var)
    {
        $this->writeWrapperValue("regions_count", $var);
        return $this;}

    /**
     * The matrix shows where the regions are located.
     * Example: If the matrix has 2x2 dimensions, then
     * * region_location_matrix[0][0] = the number of regions that appear in the top left corner, i.e. [0,0]..(0.5,0.5)
     * * region_location_matrix[0][1] = the number of regions that appear in the top right corner, i.e. [0,0.5]..[0.5,1]
     * * region_location_matrix[1][0] = the number of regions that appear in the bottom left corner, i.e. [0.5,0]..[1,0.5)
     * * region_location_matrix[1][1] = the number of regions that appear in the bottom right corner, i.e. [0.5,0.5]..[1,1]
     *
     * Generated from protobuf field <code>.MatrixUint64 region_location_matrix = 21;</code>
     * @return \MatrixUint64
     */
    public function getRegionLocationMatrix()
    {
        return $this->region_location_matrix;
    }

    /**
     * The matrix shows where the regions are located.
     * Example: If the matrix has 2x2 dimensions, then
     * * region_location_matrix[0][0] = the number of regions that appear in the top left corner, i.e. [0,0]..(0.5,0.5)
     * * region_location_matrix[0][1] = the number of regions that appear in the top right corner, i.e. [0,0.5]..[0.5,1]
     * * region_location_matrix[1][0] = the number of regions that appear in the bottom left corner, i.e. [0.5,0]..[1,0.5)
     * * region_location_matrix[1][1] = the number of regions that appear in the bottom right corner, i.e. [0.5,0.5]..[1,1]
     *
     * Generated from protobuf field <code>.MatrixUint64 region_location_matrix = 21;</code>
     * @param \MatrixUint64 $var
     * @return $this
     */
    public function setRegionLocationMatrix($var)
    {
        GPBUtil::checkMessage($var, \MatrixUint64::class);
        $this->region_location_matrix = $var;

        return $this;
    }

    /**
     * Number of bounding boxes
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value bounding_boxes_count = 22;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getBoundingBoxesCount()
    {
        return $this->bounding_boxes_count;
    }

    /**
     * Returns the unboxed value from <code>getBoundingBoxesCount()</code>

     * Number of bounding boxes
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value bounding_boxes_count = 22;</code>
     * @return int|string|null
     */
    public function getBoundingBoxesCountUnwrapped()
    {
        return $this->readWrapperValue("bounding_boxes_count");
    }

    /**
     * Number of bounding boxes
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value bounding_boxes_count = 22;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setBoundingBoxesCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->bounding_boxes_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of bounding boxes
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value bounding_boxes_count = 22;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setBoundingBoxesCountUnwrapped($var)
    {
        $this->writeWrapperValue("bounding_boxes_count", $var);
        return $this;}

    /**
     * Number of polygons
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value polygons_count = 23;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getPolygonsCount()
    {
        return $this->polygons_count;
    }

    /**
     * Returns the unboxed value from <code>getPolygonsCount()</code>

     * Number of polygons
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value polygons_count = 23;</code>
     * @return int|string|null
     */
    public function getPolygonsCountUnwrapped()
    {
        return $this->readWrapperValue("polygons_count");
    }

    /**
     * Number of polygons
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value polygons_count = 23;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setPolygonsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->polygons_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of polygons
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value polygons_count = 23;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setPolygonsCountUnwrapped($var)
    {
        $this->writeWrapperValue("polygons_count", $var);
        return $this;}

    /**
     * Number of points
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value points_count = 24;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getPointsCount()
    {
        return $this->points_count;
    }

    /**
     * Returns the unboxed value from <code>getPointsCount()</code>

     * Number of points
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value points_count = 24;</code>
     * @return int|string|null
     */
    public function getPointsCountUnwrapped()
    {
        return $this->readWrapperValue("points_count");
    }

    /**
     * Number of points
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value points_count = 24;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setPointsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->points_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of points
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value points_count = 24;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setPointsCountUnwrapped($var)
    {
        $this->writeWrapperValue("points_count", $var);
        return $this;}

    /**
     * Number of masks
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value masks_count = 25;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getMasksCount()
    {
        return $this->masks_count;
    }

    /**
     * Returns the unboxed value from <code>getMasksCount()</code>

     * Number of masks
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value masks_count = 25;</code>
     * @return int|string|null
     */
    public function getMasksCountUnwrapped()
    {
        return $this->readWrapperValue("masks_count");
    }

    /**
     * Number of masks
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value masks_count = 25;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setMasksCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->masks_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of masks
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value masks_count = 25;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setMasksCountUnwrapped($var)
    {
        $this->writeWrapperValue("masks_count", $var);
        return $this;}

    /**
     * Number of inputs that have regions attached
     * Note that this is not a recursive count: if an input contains frames that contains regions, then the region_frames_count is increased, but region_inputs_count is not increased.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_inputs_count = 60;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getRegionInputsCount()
    {
        return $this->region_inputs_count;
    }

    /**
     * Returns the unboxed value from <code>getRegionInputsCount()</code>

     * Number of inputs that have regions attached
     * Note that this is not a recursive count: if an input contains frames that contains regions, then the region_frames_count is increased, but region_inputs_count is not increased.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_inputs_count = 60;</code>
     * @return int|string|null
     */
    public function getRegionInputsCountUnwrapped()
    {
        return $this->readWrapperValue("region_inputs_count");
    }

    /**
     * Number of inputs that have regions attached
     * Note that this is not a recursive count: if an input contains frames that contains regions, then the region_frames_count is increased, but region_inputs_count is not increased.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_inputs_count = 60;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setRegionInputsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->region_inputs_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of inputs that have regions attached
     * Note that this is not a recursive count: if an input contains frames that contains regions, then the region_frames_count is increased, but region_inputs_count is not increased.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_inputs_count = 60;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setRegionInputsCountUnwrapped($var)
    {
        $this->writeWrapperValue("region_inputs_count", $var);
        return $this;}

    /**
     * Number of frames that have regions attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_frames_count = 61;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getRegionFramesCount()
    {
        return $this->region_frames_count;
    }

    /**
     * Returns the unboxed value from <code>getRegionFramesCount()</code>

     * Number of frames that have regions attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_frames_count = 61;</code>
     * @return int|string|null
     */
    public function getRegionFramesCountUnwrapped()
    {
        return $this->readWrapperValue("region_frames_count");
    }

    /**
     * Number of frames that have regions attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_frames_count = 61;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setRegionFramesCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->region_frames_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of frames that have regions attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value region_frames_count = 61;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setRegionFramesCountUnwrapped($var)
    {
        $this->writeWrapperValue("region_frames_count", $var);
        return $this;}

    /**
     * Number of frames
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frames_count = 30;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getFramesCount()
    {
        return $this->frames_count;
    }

    /**
     * Returns the unboxed value from <code>getFramesCount()</code>

     * Number of frames
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frames_count = 30;</code>
     * @return int|string|null
     */
    public function getFramesCountUnwrapped()
    {
        return $this->readWrapperValue("frames_count");
    }

    /**
     * Number of frames
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frames_count = 30;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setFramesCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->frames_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of frames
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frames_count = 30;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setFramesCountUnwrapped($var)
    {
        $this->writeWrapperValue("frames_count", $var);
        return $this;}

    /**
     * Number of inputs that have frames attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frame_inputs_count = 70;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getFrameInputsCount()
    {
        return $this->frame_inputs_count;
    }

    /**
     * Returns the unboxed value from <code>getFrameInputsCount()</code>

     * Number of inputs that have frames attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frame_inputs_count = 70;</code>
     * @return int|string|null
     */
    public function getFrameInputsCountUnwrapped()
    {
        return $this->readWrapperValue("frame_inputs_count");
    }

    /**
     * Number of inputs that have frames attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frame_inputs_count = 70;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setFrameInputsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->frame_inputs_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of inputs that have frames attached
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value frame_inputs_count = 70;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setFrameInputsCountUnwrapped($var)
    {
        $this->writeWrapperValue("frame_inputs_count", $var);
        return $this;}

    /**
     * Number of embeddings
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value embeddings_count = 40;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getEmbeddingsCount()
    {
        return $this->embeddings_count;
    }

    /**
     * Returns the unboxed value from <code>getEmbeddingsCount()</code>

     * Number of embeddings
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value embeddings_count = 40;</code>
     * @return int|string|null
     */
    public function getEmbeddingsCountUnwrapped()
    {
        return $this->readWrapperValue("embeddings_count");
    }

    /**
     * Number of embeddings
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value embeddings_count = 40;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setEmbeddingsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->embeddings_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of embeddings
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value embeddings_count = 40;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setEmbeddingsCountUnwrapped($var)
    {
        $this->writeWrapperValue("embeddings_count", $var);
        return $this;}

    /**
     * Number of positive tags added at input-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_input_tags_count = 50;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getPositiveInputTagsCount()
    {
        return $this->positive_input_tags_count;
    }

    /**
     * Returns the unboxed value from <code>getPositiveInputTagsCount()</code>

     * Number of positive tags added at input-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_input_tags_count = 50;</code>
     * @return int|string|null
     */
    public function getPositiveInputTagsCountUnwrapped()
    {
        return $this->readWrapperValue("positive_input_tags_count");
    }

    /**
     * Number of positive tags added at input-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_input_tags_count = 50;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setPositiveInputTagsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->positive_input_tags_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of positive tags added at input-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_input_tags_count = 50;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setPositiveInputTagsCountUnwrapped($var)
    {
        $this->writeWrapperValue("positive_input_tags_count", $var);
        return $this;}

    /**
     * Number of positive tags added at region-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_region_tags_count = 51;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getPositiveRegionTagsCount()
    {
        return $this->positive_region_tags_count;
    }

    /**
     * Returns the unboxed value from <code>getPositiveRegionTagsCount()</code>

     * Number of positive tags added at region-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_region_tags_count = 51;</code>
     * @return int|string|null
     */
    public function getPositiveRegionTagsCountUnwrapped()
    {
        return $this->readWrapperValue("positive_region_tags_count");
    }

    /**
     * Number of positive tags added at region-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_region_tags_count = 51;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setPositiveRegionTagsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->positive_region_tags_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of positive tags added at region-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_region_tags_count = 51;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setPositiveRegionTagsCountUnwrapped($var)
    {
        $this->writeWrapperValue("positive_region_tags_count", $var);
        return $this;}

    /**
     * Number of positive tags added at frame-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_frame_tags_count = 52;</code>
     * @return \Google\Protobuf\UInt64Value
     */
    public function getPositiveFrameTagsCount()
    {
        return $this->positive_frame_tags_count;
    }

    /**
     * Returns the unboxed value from <code>getPositiveFrameTagsCount()</code>

     * Number of positive tags added at frame-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_frame_tags_count = 52;</code>
     * @return int|string|null
     */
    public function getPositiveFrameTagsCountUnwrapped()
    {
        return $this->readWrapperValue("positive_frame_tags_count");
    }

    /**
     * Number of positive tags added at frame-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_frame_tags_count = 52;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setPositiveFrameTagsCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->positive_frame_tags_count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     * Number of positive tags added at frame-level
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value positive_frame_tags_count = 52;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setPositiveFrameTagsCountUnwrapped($var)
    {
        $this->writeWrapperValue("positive_frame_tags_count", $var);
        return $this;}

}

