<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.MultiLogEntryResponse</code>
 */
class MultiLogEntryResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 1;</code>
     */
    protected $status = null;
    /**
     * Log entries.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.LogEntry log_entries = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    private $log_entries;
    /**
     * The page the log entries are from. If the request's page was omitted or greater than the total pages, then this is set to the last page.
     *
     * Generated from protobuf field <code>uint32 page = 4;</code>
     */
    protected $page = 0;
    /**
     * The number of results contained in each page.
     *
     * Generated from protobuf field <code>uint32 per_page = 5;</code>
     */
    protected $per_page = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\Status\Status $status
     *     @type array<\Clarifai\Api\LogEntry>|\Google\Protobuf\Internal\RepeatedField $log_entries
     *           Log entries.
     *     @type int $page
     *           The page the log entries are from. If the request's page was omitted or greater than the total pages, then this is set to the last page.
     *     @type int $per_page
     *           The number of results contained in each page.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 1;</code>
     * @return \Clarifai\Api\Status\Status|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    public function hasStatus()
    {
        return isset($this->status);
    }

    public function clearStatus()
    {
        unset($this->status);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 1;</code>
     * @param \Clarifai\Api\Status\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Status\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * Log entries.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.LogEntry log_entries = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLogEntries()
    {
        return $this->log_entries;
    }

    /**
     * Log entries.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.LogEntry log_entries = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param array<\Clarifai\Api\LogEntry>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLogEntries($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Clarifai\Api\LogEntry::class);
        $this->log_entries = $arr;

        return $this;
    }

    /**
     * The page the log entries are from. If the request's page was omitted or greater than the total pages, then this is set to the last page.
     *
     * Generated from protobuf field <code>uint32 page = 4;</code>
     * @return int
     */
    public function getPage()
    {
        return $this->page;
    }

    /**
     * The page the log entries are from. If the request's page was omitted or greater than the total pages, then this is set to the last page.
     *
     * Generated from protobuf field <code>uint32 page = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setPage($var)
    {
        GPBUtil::checkUint32($var);
        $this->page = $var;

        return $this;
    }

    /**
     * The number of results contained in each page.
     *
     * Generated from protobuf field <code>uint32 per_page = 5;</code>
     * @return int
     */
    public function getPerPage()
    {
        return $this->per_page;
    }

    /**
     * The number of results contained in each page.
     *
     * Generated from protobuf field <code>uint32 per_page = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setPerPage($var)
    {
        GPBUtil::checkUint32($var);
        $this->per_page = $var;

        return $this;
    }

}

