<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * MCP request is used to represent the MCP format described here:
 * https://modelcontextprotocol.io/docs/concepts/transports#requests
 *
 * Generated from protobuf message <code>clarifai.api.MCPRequest</code>
 */
class MCPRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * This is always "2.0"
     *
     * Generated from protobuf field <code>string jsonrpc = 1;</code>
     */
    protected $jsonrpc = '';
    /**
     * The id as an int. Note: the protocol says string | number. int64 becomes a string.
     * All clients tests so far are using numbers.
     * protobuf and grpc-gateway have no simple way to handle this OR in a type
     * if needed we can add another option to our jsonpb parser.
     * We have to return even empty (id=0) id.
     *
     * Generated from protobuf field <code>uint32 id = 2;</code>
     */
    protected $id = 0;
    /**
     * The method name to call for MCP like initialize, tools/list, tools/call, etc.
     *
     * Generated from protobuf field <code>string method = 3;</code>
     */
    protected $method = '';
    /**
     * The params for that method. Struct is used to represent a JSON object.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct params = 4;</code>
     */
    protected $params = null;
    /**
     * In order to specify the url parameters of user/app/model/version we need these same 4 fields as PostModelOutputsRequest
     *
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 5;</code>
     */
    protected $user_app_id = null;
    /**
     * Generated from protobuf field <code>string model_id = 6;</code>
     */
    protected $model_id = '';
    /**
     * Generated from protobuf field <code>string version_id = 7;</code>
     */
    protected $version_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $jsonrpc
     *           This is always "2.0"
     *     @type int $id
     *           The id as an int. Note: the protocol says string | number. int64 becomes a string.
     *           All clients tests so far are using numbers.
     *           protobuf and grpc-gateway have no simple way to handle this OR in a type
     *           if needed we can add another option to our jsonpb parser.
     *           We have to return even empty (id=0) id.
     *     @type string $method
     *           The method name to call for MCP like initialize, tools/list, tools/call, etc.
     *     @type \Google\Protobuf\Struct $params
     *           The params for that method. Struct is used to represent a JSON object.
     *     @type \Clarifai\Api\UserAppIDSet $user_app_id
     *           In order to specify the url parameters of user/app/model/version we need these same 4 fields as PostModelOutputsRequest
     *     @type string $model_id
     *     @type string $version_id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * This is always "2.0"
     *
     * Generated from protobuf field <code>string jsonrpc = 1;</code>
     * @return string
     */
    public function getJsonrpc()
    {
        return $this->jsonrpc;
    }

    /**
     * This is always "2.0"
     *
     * Generated from protobuf field <code>string jsonrpc = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setJsonrpc($var)
    {
        GPBUtil::checkString($var, True);
        $this->jsonrpc = $var;

        return $this;
    }

    /**
     * The id as an int. Note: the protocol says string | number. int64 becomes a string.
     * All clients tests so far are using numbers.
     * protobuf and grpc-gateway have no simple way to handle this OR in a type
     * if needed we can add another option to our jsonpb parser.
     * We have to return even empty (id=0) id.
     *
     * Generated from protobuf field <code>uint32 id = 2;</code>
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * The id as an int. Note: the protocol says string | number. int64 becomes a string.
     * All clients tests so far are using numbers.
     * protobuf and grpc-gateway have no simple way to handle this OR in a type
     * if needed we can add another option to our jsonpb parser.
     * We have to return even empty (id=0) id.
     *
     * Generated from protobuf field <code>uint32 id = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkUint32($var);
        $this->id = $var;

        return $this;
    }

    /**
     * The method name to call for MCP like initialize, tools/list, tools/call, etc.
     *
     * Generated from protobuf field <code>string method = 3;</code>
     * @return string
     */
    public function getMethod()
    {
        return $this->method;
    }

    /**
     * The method name to call for MCP like initialize, tools/list, tools/call, etc.
     *
     * Generated from protobuf field <code>string method = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setMethod($var)
    {
        GPBUtil::checkString($var, True);
        $this->method = $var;

        return $this;
    }

    /**
     * The params for that method. Struct is used to represent a JSON object.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct params = 4;</code>
     * @return \Google\Protobuf\Struct|null
     */
    public function getParams()
    {
        return $this->params;
    }

    public function hasParams()
    {
        return isset($this->params);
    }

    public function clearParams()
    {
        unset($this->params);
    }

    /**
     * The params for that method. Struct is used to represent a JSON object.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct params = 4;</code>
     * @param \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setParams($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->params = $var;

        return $this;
    }

    /**
     * In order to specify the url parameters of user/app/model/version we need these same 4 fields as PostModelOutputsRequest
     *
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 5;</code>
     * @return \Clarifai\Api\UserAppIDSet|null
     */
    public function getUserAppId()
    {
        return $this->user_app_id;
    }

    public function hasUserAppId()
    {
        return isset($this->user_app_id);
    }

    public function clearUserAppId()
    {
        unset($this->user_app_id);
    }

    /**
     * In order to specify the url parameters of user/app/model/version we need these same 4 fields as PostModelOutputsRequest
     *
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 5;</code>
     * @param \Clarifai\Api\UserAppIDSet $var
     * @return $this
     */
    public function setUserAppId($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\UserAppIDSet::class);
        $this->user_app_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string model_id = 6;</code>
     * @return string
     */
    public function getModelId()
    {
        return $this->model_id;
    }

    /**
     * Generated from protobuf field <code>string model_id = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setModelId($var)
    {
        GPBUtil::checkString($var, True);
        $this->model_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string version_id = 7;</code>
     * @return string
     */
    public function getVersionId()
    {
        return $this->version_id;
    }

    /**
     * Generated from protobuf field <code>string version_id = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setVersionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->version_id = $var;

        return $this;
    }

}

