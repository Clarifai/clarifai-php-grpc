<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ConceptTypeCount
 *
 * Generated from protobuf message <code>clarifai.api.ConceptTypeCount</code>
 */
class ConceptTypeCount extends \Google\Protobuf\Internal\Message
{
    /**
     * The number of inputs that have a concept with a value of 1.0 (indicating presence of the
     * concept in an input).
     *
     * Generated from protobuf field <code>uint32 positive = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    protected $positive = 0;
    /**
     * The number of inputs that have a concept with a value of 0.0 (indicating absence of the
     * concept in an input).
     *
     * Generated from protobuf field <code>uint32 negative = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    protected $negative = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $positive
     *           The number of inputs that have a concept with a value of 1.0 (indicating presence of the
     *           concept in an input).
     *     @type int $negative
     *           The number of inputs that have a concept with a value of 0.0 (indicating absence of the
     *           concept in an input).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * The number of inputs that have a concept with a value of 1.0 (indicating presence of the
     * concept in an input).
     *
     * Generated from protobuf field <code>uint32 positive = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return int
     */
    public function getPositive()
    {
        return $this->positive;
    }

    /**
     * The number of inputs that have a concept with a value of 1.0 (indicating presence of the
     * concept in an input).
     *
     * Generated from protobuf field <code>uint32 positive = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param int $var
     * @return $this
     */
    public function setPositive($var)
    {
        GPBUtil::checkUint32($var);
        $this->positive = $var;

        return $this;
    }

    /**
     * The number of inputs that have a concept with a value of 0.0 (indicating absence of the
     * concept in an input).
     *
     * Generated from protobuf field <code>uint32 negative = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return int
     */
    public function getNegative()
    {
        return $this->negative;
    }

    /**
     * The number of inputs that have a concept with a value of 0.0 (indicating absence of the
     * concept in an input).
     *
     * Generated from protobuf field <code>uint32 negative = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param int $var
     * @return $this
     */
    public function setNegative($var)
    {
        GPBUtil::checkUint32($var);
        $this->negative = $var;

        return $this;
    }

}

