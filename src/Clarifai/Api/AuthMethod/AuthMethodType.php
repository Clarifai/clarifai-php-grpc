<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api\AuthMethod;

use UnexpectedValueException;

/**
 * Protobuf type <code>clarifai.api.AuthMethod.AuthMethodType</code>
 */
class AuthMethodType
{
    /**
     * Generated from protobuf enum <code>AUTH_METHOD_TYPE_NOT_SET = 0;</code>
     */
    const AUTH_METHOD_TYPE_NOT_SET = 0;
    /**
     * This is used for standard authentication method: user & password.
     *
     * Generated from protobuf enum <code>PASSWORD = 1;</code>
     */
    const PASSWORD = 1;
    /**
     * This is used for Single Sign On authentication method using a SAML Identity Provider.
     *
     * Generated from protobuf enum <code>SAML = 2;</code>
     */
    const SAML = 2;
    /**
     * This is used for Single Sign On authentication method using a OAuth Identity Provider.
     *
     * Generated from protobuf enum <code>OAUTH = 3;</code>
     */
    const OAUTH = 3;

    private static $valueToName = [
        self::AUTH_METHOD_TYPE_NOT_SET => 'AUTH_METHOD_TYPE_NOT_SET',
        self::PASSWORD => 'PASSWORD',
        self::SAML => 'SAML',
        self::OAUTH => 'OAUTH',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(AuthMethodType::class, \Clarifai\Api\AuthMethod_AuthMethodType::class);

