<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Concept or tag
 *
 * Generated from protobuf message <code>clarifai.api.Concept</code>
 */
class Concept extends \Google\Protobuf\Internal\Message
{
    /**
     * The concept's unique id.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * The name of the concept in the given language.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Used to indicate presence (1.0) or not (0.0) of this concept when making a request.
     * This is also the prediction probability when returning predictions from our API.
     * For convenience we use the default of 1.0 when making requests so the concept you provide is
     * is treated as a positive (1.0) and not a negative (which would be value == 0.0).
     *
     * Generated from protobuf field <code>float value = 3 [(.clarifai.api.utils.cl_show_if_empty) = true, (.clarifai.api.utils.cl_default_float) = 1];</code>
     */
    protected $value = 0.0;
    /**
     * When the concept was created. The format is https://www.ietf.org/rfc/rfc3339.txt .
     * Example: "2006-01-02T15:04:05.999999Z". This field is used only in a response.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 4;</code>
     */
    protected $created_at = null;
    /**
     * The language in which the concept name is in. This is *ONLY* used in the response and setting
     * it in a request is ignored since the default language of your app is used when creating
     * or patching a Concept. To set other languages for your concept use the ConceptLanguage object
     * and its corresponding endpoints.
     *
     * Generated from protobuf field <code>string language = 5;</code>
     */
    protected $language = '';
    /**
     * The application id that this concept is within. This can be ignored by most users.
     *
     * Generated from protobuf field <code>string app_id = 6;</code>
     */
    protected $app_id = '';
    /**
     * The definition for the concept. Similar to name. This can be ignored by most users.
     *
     * Generated from protobuf field <code>string definition = 7;</code>
     */
    protected $definition = '';
    /**
     * The vocabulary that this concept belongs to. This is useful if you have different unique sets
     * of concepts that you can separate out based on this field. For example "age_appearance" vs
     * "gender_appearance" in a list of concept returned from the demographics model.
     *
     * Generated from protobuf field <code>string vocab_id = 8;</code>
     */
    protected $vocab_id = '';
    /**
     * The visibility field represents whether this message is privately/publicly visible.
     * To be visible to the public the App that contains it AND the User that contains the App must
     * also be publicly visible.
     *
     * Generated from protobuf field <code>.clarifai.api.Visibility visibility = 9;</code>
     */
    protected $visibility = null;
    /**
     * The user the concept belongs to.
     *
     * Generated from protobuf field <code>string user_id = 10;</code>
     */
    protected $user_id = '';
    /**
     * Information about keypoints for this concept
     *
     * Generated from protobuf field <code>.clarifai.api.KeypointInfo keypoint_info = 11;</code>
     */
    protected $keypoint_info = null;
    /**
     * Optional extra info.
     *
     * Generated from protobuf field <code>.clarifai.api.ConceptExtraInfo extra_info = 12;</code>
     */
    protected $extra_info = null;
    /**
     * To handle arbitrary json metadata:
     * https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
     *
     * Generated from protobuf field <code>.google.protobuf.Struct metadata = 13;</code>
     */
    protected $metadata = null;
    /**
     * Representative image for the concept
     *
     * Generated from protobuf field <code>.clarifai.api.Image image = 22;</code>
     */
    protected $image = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           The concept's unique id.
     *     @type string $name
     *           The name of the concept in the given language.
     *     @type float $value
     *           Used to indicate presence (1.0) or not (0.0) of this concept when making a request.
     *           This is also the prediction probability when returning predictions from our API.
     *           For convenience we use the default of 1.0 when making requests so the concept you provide is
     *           is treated as a positive (1.0) and not a negative (which would be value == 0.0).
     *     @type \Google\Protobuf\Timestamp $created_at
     *           When the concept was created. The format is https://www.ietf.org/rfc/rfc3339.txt .
     *           Example: "2006-01-02T15:04:05.999999Z". This field is used only in a response.
     *     @type string $language
     *           The language in which the concept name is in. This is *ONLY* used in the response and setting
     *           it in a request is ignored since the default language of your app is used when creating
     *           or patching a Concept. To set other languages for your concept use the ConceptLanguage object
     *           and its corresponding endpoints.
     *     @type string $app_id
     *           The application id that this concept is within. This can be ignored by most users.
     *     @type string $definition
     *           The definition for the concept. Similar to name. This can be ignored by most users.
     *     @type string $vocab_id
     *           The vocabulary that this concept belongs to. This is useful if you have different unique sets
     *           of concepts that you can separate out based on this field. For example "age_appearance" vs
     *           "gender_appearance" in a list of concept returned from the demographics model.
     *     @type \Clarifai\Api\Visibility $visibility
     *           The visibility field represents whether this message is privately/publicly visible.
     *           To be visible to the public the App that contains it AND the User that contains the App must
     *           also be publicly visible.
     *     @type string $user_id
     *           The user the concept belongs to.
     *     @type \Clarifai\Api\KeypointInfo $keypoint_info
     *           Information about keypoints for this concept
     *     @type \Clarifai\Api\ConceptExtraInfo $extra_info
     *           Optional extra info.
     *     @type \Google\Protobuf\Struct $metadata
     *           To handle arbitrary json metadata:
     *           https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
     *     @type \Clarifai\Api\Image $image
     *           Representative image for the concept
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * The concept's unique id.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * The concept's unique id.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * The name of the concept in the given language.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The name of the concept in the given language.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Used to indicate presence (1.0) or not (0.0) of this concept when making a request.
     * This is also the prediction probability when returning predictions from our API.
     * For convenience we use the default of 1.0 when making requests so the concept you provide is
     * is treated as a positive (1.0) and not a negative (which would be value == 0.0).
     *
     * Generated from protobuf field <code>float value = 3 [(.clarifai.api.utils.cl_show_if_empty) = true, (.clarifai.api.utils.cl_default_float) = 1];</code>
     * @return float
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Used to indicate presence (1.0) or not (0.0) of this concept when making a request.
     * This is also the prediction probability when returning predictions from our API.
     * For convenience we use the default of 1.0 when making requests so the concept you provide is
     * is treated as a positive (1.0) and not a negative (which would be value == 0.0).
     *
     * Generated from protobuf field <code>float value = 3 [(.clarifai.api.utils.cl_show_if_empty) = true, (.clarifai.api.utils.cl_default_float) = 1];</code>
     * @param float $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkFloat($var);
        $this->value = $var;

        return $this;
    }

    /**
     * When the concept was created. The format is https://www.ietf.org/rfc/rfc3339.txt .
     * Example: "2006-01-02T15:04:05.999999Z". This field is used only in a response.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 4;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    public function hasCreatedAt()
    {
        return isset($this->created_at);
    }

    public function clearCreatedAt()
    {
        unset($this->created_at);
    }

    /**
     * When the concept was created. The format is https://www.ietf.org/rfc/rfc3339.txt .
     * Example: "2006-01-02T15:04:05.999999Z". This field is used only in a response.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 4;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreatedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created_at = $var;

        return $this;
    }

    /**
     * The language in which the concept name is in. This is *ONLY* used in the response and setting
     * it in a request is ignored since the default language of your app is used when creating
     * or patching a Concept. To set other languages for your concept use the ConceptLanguage object
     * and its corresponding endpoints.
     *
     * Generated from protobuf field <code>string language = 5;</code>
     * @return string
     */
    public function getLanguage()
    {
        return $this->language;
    }

    /**
     * The language in which the concept name is in. This is *ONLY* used in the response and setting
     * it in a request is ignored since the default language of your app is used when creating
     * or patching a Concept. To set other languages for your concept use the ConceptLanguage object
     * and its corresponding endpoints.
     *
     * Generated from protobuf field <code>string language = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setLanguage($var)
    {
        GPBUtil::checkString($var, True);
        $this->language = $var;

        return $this;
    }

    /**
     * The application id that this concept is within. This can be ignored by most users.
     *
     * Generated from protobuf field <code>string app_id = 6;</code>
     * @return string
     */
    public function getAppId()
    {
        return $this->app_id;
    }

    /**
     * The application id that this concept is within. This can be ignored by most users.
     *
     * Generated from protobuf field <code>string app_id = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setAppId($var)
    {
        GPBUtil::checkString($var, True);
        $this->app_id = $var;

        return $this;
    }

    /**
     * The definition for the concept. Similar to name. This can be ignored by most users.
     *
     * Generated from protobuf field <code>string definition = 7;</code>
     * @return string
     */
    public function getDefinition()
    {
        return $this->definition;
    }

    /**
     * The definition for the concept. Similar to name. This can be ignored by most users.
     *
     * Generated from protobuf field <code>string definition = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setDefinition($var)
    {
        GPBUtil::checkString($var, True);
        $this->definition = $var;

        return $this;
    }

    /**
     * The vocabulary that this concept belongs to. This is useful if you have different unique sets
     * of concepts that you can separate out based on this field. For example "age_appearance" vs
     * "gender_appearance" in a list of concept returned from the demographics model.
     *
     * Generated from protobuf field <code>string vocab_id = 8;</code>
     * @return string
     */
    public function getVocabId()
    {
        return $this->vocab_id;
    }

    /**
     * The vocabulary that this concept belongs to. This is useful if you have different unique sets
     * of concepts that you can separate out based on this field. For example "age_appearance" vs
     * "gender_appearance" in a list of concept returned from the demographics model.
     *
     * Generated from protobuf field <code>string vocab_id = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setVocabId($var)
    {
        GPBUtil::checkString($var, True);
        $this->vocab_id = $var;

        return $this;
    }

    /**
     * The visibility field represents whether this message is privately/publicly visible.
     * To be visible to the public the App that contains it AND the User that contains the App must
     * also be publicly visible.
     *
     * Generated from protobuf field <code>.clarifai.api.Visibility visibility = 9;</code>
     * @return \Clarifai\Api\Visibility|null
     */
    public function getVisibility()
    {
        return $this->visibility;
    }

    public function hasVisibility()
    {
        return isset($this->visibility);
    }

    public function clearVisibility()
    {
        unset($this->visibility);
    }

    /**
     * The visibility field represents whether this message is privately/publicly visible.
     * To be visible to the public the App that contains it AND the User that contains the App must
     * also be publicly visible.
     *
     * Generated from protobuf field <code>.clarifai.api.Visibility visibility = 9;</code>
     * @param \Clarifai\Api\Visibility $var
     * @return $this
     */
    public function setVisibility($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Visibility::class);
        $this->visibility = $var;

        return $this;
    }

    /**
     * The user the concept belongs to.
     *
     * Generated from protobuf field <code>string user_id = 10;</code>
     * @return string
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * The user the concept belongs to.
     *
     * Generated from protobuf field <code>string user_id = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->user_id = $var;

        return $this;
    }

    /**
     * Information about keypoints for this concept
     *
     * Generated from protobuf field <code>.clarifai.api.KeypointInfo keypoint_info = 11;</code>
     * @return \Clarifai\Api\KeypointInfo|null
     */
    public function getKeypointInfo()
    {
        return $this->keypoint_info;
    }

    public function hasKeypointInfo()
    {
        return isset($this->keypoint_info);
    }

    public function clearKeypointInfo()
    {
        unset($this->keypoint_info);
    }

    /**
     * Information about keypoints for this concept
     *
     * Generated from protobuf field <code>.clarifai.api.KeypointInfo keypoint_info = 11;</code>
     * @param \Clarifai\Api\KeypointInfo $var
     * @return $this
     */
    public function setKeypointInfo($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\KeypointInfo::class);
        $this->keypoint_info = $var;

        return $this;
    }

    /**
     * Optional extra info.
     *
     * Generated from protobuf field <code>.clarifai.api.ConceptExtraInfo extra_info = 12;</code>
     * @return \Clarifai\Api\ConceptExtraInfo|null
     */
    public function getExtraInfo()
    {
        return $this->extra_info;
    }

    public function hasExtraInfo()
    {
        return isset($this->extra_info);
    }

    public function clearExtraInfo()
    {
        unset($this->extra_info);
    }

    /**
     * Optional extra info.
     *
     * Generated from protobuf field <code>.clarifai.api.ConceptExtraInfo extra_info = 12;</code>
     * @param \Clarifai\Api\ConceptExtraInfo $var
     * @return $this
     */
    public function setExtraInfo($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\ConceptExtraInfo::class);
        $this->extra_info = $var;

        return $this;
    }

    /**
     * To handle arbitrary json metadata:
     * https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
     *
     * Generated from protobuf field <code>.google.protobuf.Struct metadata = 13;</code>
     * @return \Google\Protobuf\Struct|null
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    public function hasMetadata()
    {
        return isset($this->metadata);
    }

    public function clearMetadata()
    {
        unset($this->metadata);
    }

    /**
     * To handle arbitrary json metadata:
     * https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
     *
     * Generated from protobuf field <code>.google.protobuf.Struct metadata = 13;</code>
     * @param \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setMetadata($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->metadata = $var;

        return $this;
    }

    /**
     * Representative image for the concept
     *
     * Generated from protobuf field <code>.clarifai.api.Image image = 22;</code>
     * @return \Clarifai\Api\Image|null
     */
    public function getImage()
    {
        return $this->image;
    }

    public function hasImage()
    {
        return isset($this->image);
    }

    public function clearImage()
    {
        unset($this->image);
    }

    /**
     * Representative image for the concept
     *
     * Generated from protobuf field <code>.clarifai.api.Image image = 22;</code>
     * @param \Clarifai\Api\Image $var
     * @return $this
     */
    public function setImage($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Image::class);
        $this->image = $var;

        return $this;
    }

}

