<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * LicenseLimit
 *
 * Generated from protobuf message <code>clarifai.api.LicenseLimit</code>
 */
class LicenseLimit extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.clarifai.api.Model model = 1;</code>
     */
    protected $model = null;
    /**
     * Expiration date, if different from the one in the license file (optional)
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 2;</code>
     */
    protected $expires_at = null;
    /**
     * Maximum number of operations allowed.
     *
     * Generated from protobuf field <code>int64 max_operation_count = 3 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    protected $max_operation_count = 0;
    /**
     * the status of this license limit
     *
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 4;</code>
     */
    protected $status = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\Model $model
     *     @type \Google\Protobuf\Timestamp $expires_at
     *           Expiration date, if different from the one in the license file (optional)
     *     @type int|string $max_operation_count
     *           Maximum number of operations allowed.
     *     @type \Clarifai\Api\Status\Status $status
     *           the status of this license limit
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.Model model = 1;</code>
     * @return \Clarifai\Api\Model|null
     */
    public function getModel()
    {
        return $this->model;
    }

    public function hasModel()
    {
        return isset($this->model);
    }

    public function clearModel()
    {
        unset($this->model);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.Model model = 1;</code>
     * @param \Clarifai\Api\Model $var
     * @return $this
     */
    public function setModel($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Model::class);
        $this->model = $var;

        return $this;
    }

    /**
     * Expiration date, if different from the one in the license file (optional)
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpiresAt()
    {
        return $this->expires_at;
    }

    public function hasExpiresAt()
    {
        return isset($this->expires_at);
    }

    public function clearExpiresAt()
    {
        unset($this->expires_at);
    }

    /**
     * Expiration date, if different from the one in the license file (optional)
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpiresAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expires_at = $var;

        return $this;
    }

    /**
     * Maximum number of operations allowed.
     *
     * Generated from protobuf field <code>int64 max_operation_count = 3 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return int|string
     */
    public function getMaxOperationCount()
    {
        return $this->max_operation_count;
    }

    /**
     * Maximum number of operations allowed.
     *
     * Generated from protobuf field <code>int64 max_operation_count = 3 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxOperationCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_operation_count = $var;

        return $this;
    }

    /**
     * the status of this license limit
     *
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 4;</code>
     * @return \Clarifai\Api\Status\Status|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    public function hasStatus()
    {
        return isset($this->status);
    }

    public function clearStatus()
    {
        unset($this->status);
    }

    /**
     * the status of this license limit
     *
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 4;</code>
     * @param \Clarifai\Api\Status\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Status\Status::class);
        $this->status = $var;

        return $this;
    }

}

