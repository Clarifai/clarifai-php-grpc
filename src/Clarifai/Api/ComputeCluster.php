<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * We define a cluster here to be used in Nodepools and by the cloud provider.
 * There will be one cloud provider per Cluster.
 * This allows us to define Clusters that are VPCs within one physical cloud and have that
 * managed by one cloud provider which can list all nodepools for that VPC to deploy them and
 * orchestrate work within them.
 *
 * Generated from protobuf message <code>clarifai.api.ComputeCluster</code>
 */
class ComputeCluster extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Short description of cluster region.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     */
    protected $description = '';
    /**
     * The cloud provider where this cluster is hosted.
     * Some example cloud provider IDs may be aws, gcp, azure, local, kubernetes, etc.
     *
     * Generated from protobuf field <code>.clarifai.api.CloudProvider cloud_provider = 3;</code>
     */
    protected $cloud_provider = null;
    /**
     * The region. The naming here depends on the cluster choice above and will be validated
     * against which clusters+regions that Clarifai currently supports.
     *
     * Generated from protobuf field <code>string region = 4;</code>
     */
    protected $region = '';
    /**
     * The user/org that this compute cluster belongs to.
     *
     * Generated from protobuf field <code>string user_id = 5;</code>
     */
    protected $user_id = '';
    /**
     * When the compute cluster was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 6;</code>
     */
    protected $created_at = null;
    /**
     * When the compute cluster was last modified.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp modified_at = 7;</code>
     */
    protected $modified_at = null;
    /**
     * The visibility field represents whether this message is privately/publicly visible.
     * To be visible to the public the App that contains it AND the User that contains the App must
     * also be publicly visible.
     *
     * Generated from protobuf field <code>.clarifai.api.Visibility visibility = 8;</code>
     */
    protected $visibility = null;
    /**
     * We offer different types of compute clusters such as:
     * 'shared' which only Clarifai can create.
     * 'dedicated' where you're in control of defining the nodepools within the cluster
     * 'local-dev' which means you're responsible for starting runners manually which is great for local
     * development but not recommended for production use cases.
     *
     * Generated from protobuf field <code>string cluster_type = 9;</code>
     */
    protected $cluster_type = '';
    /**
     * Managed by represents who is responsible for the cluster.
     * This is currently either "clarifai" where we fully manage the infrastructure.
     * Or, "user" where the user is responsible for the underlying infrastructure.
     *
     * Generated from protobuf field <code>string managed_by = 10;</code>
     */
    protected $managed_by = '';
    /**
     * Key to use within the compute cluster for all requests to the API.
     * You can post with the key.id filled in to set the key for the compute cluster.
     * The responses will intentionaly only return the description of the key for security
     * purposes since you may have other people through orgs/teams having access to this compute
     * cluster who should not view your key.
     * This must be a valid key created before creating the ComputeCluster.
     * Deleting this key will not be prevented, which means all resources in this ComputeCluster
     * will lose connection to the API, so delete keys at your own risk.
     * The user_id who owns the key must match the user_id provided in the ComputeCluster.
     *
     * Generated from protobuf field <code>.clarifai.api.Key key = 11;</code>
     */
    protected $key = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $description
     *           Short description of cluster region.
     *     @type \Clarifai\Api\CloudProvider $cloud_provider
     *           The cloud provider where this cluster is hosted.
     *           Some example cloud provider IDs may be aws, gcp, azure, local, kubernetes, etc.
     *     @type string $region
     *           The region. The naming here depends on the cluster choice above and will be validated
     *           against which clusters+regions that Clarifai currently supports.
     *     @type string $user_id
     *           The user/org that this compute cluster belongs to.
     *     @type \Google\Protobuf\Timestamp $created_at
     *           When the compute cluster was created.
     *     @type \Google\Protobuf\Timestamp $modified_at
     *           When the compute cluster was last modified.
     *     @type \Clarifai\Api\Visibility $visibility
     *           The visibility field represents whether this message is privately/publicly visible.
     *           To be visible to the public the App that contains it AND the User that contains the App must
     *           also be publicly visible.
     *     @type string $cluster_type
     *           We offer different types of compute clusters such as:
     *           'shared' which only Clarifai can create.
     *           'dedicated' where you're in control of defining the nodepools within the cluster
     *           'local-dev' which means you're responsible for starting runners manually which is great for local
     *           development but not recommended for production use cases.
     *     @type string $managed_by
     *           Managed by represents who is responsible for the cluster.
     *           This is currently either "clarifai" where we fully manage the infrastructure.
     *           Or, "user" where the user is responsible for the underlying infrastructure.
     *     @type \Clarifai\Api\Key $key
     *           Key to use within the compute cluster for all requests to the API.
     *           You can post with the key.id filled in to set the key for the compute cluster.
     *           The responses will intentionaly only return the description of the key for security
     *           purposes since you may have other people through orgs/teams having access to this compute
     *           cluster who should not view your key.
     *           This must be a valid key created before creating the ComputeCluster.
     *           Deleting this key will not be prevented, which means all resources in this ComputeCluster
     *           will lose connection to the API, so delete keys at your own risk.
     *           The user_id who owns the key must match the user_id provided in the ComputeCluster.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Short description of cluster region.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Short description of cluster region.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * The cloud provider where this cluster is hosted.
     * Some example cloud provider IDs may be aws, gcp, azure, local, kubernetes, etc.
     *
     * Generated from protobuf field <code>.clarifai.api.CloudProvider cloud_provider = 3;</code>
     * @return \Clarifai\Api\CloudProvider|null
     */
    public function getCloudProvider()
    {
        return $this->cloud_provider;
    }

    public function hasCloudProvider()
    {
        return isset($this->cloud_provider);
    }

    public function clearCloudProvider()
    {
        unset($this->cloud_provider);
    }

    /**
     * The cloud provider where this cluster is hosted.
     * Some example cloud provider IDs may be aws, gcp, azure, local, kubernetes, etc.
     *
     * Generated from protobuf field <code>.clarifai.api.CloudProvider cloud_provider = 3;</code>
     * @param \Clarifai\Api\CloudProvider $var
     * @return $this
     */
    public function setCloudProvider($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\CloudProvider::class);
        $this->cloud_provider = $var;

        return $this;
    }

    /**
     * The region. The naming here depends on the cluster choice above and will be validated
     * against which clusters+regions that Clarifai currently supports.
     *
     * Generated from protobuf field <code>string region = 4;</code>
     * @return string
     */
    public function getRegion()
    {
        return $this->region;
    }

    /**
     * The region. The naming here depends on the cluster choice above and will be validated
     * against which clusters+regions that Clarifai currently supports.
     *
     * Generated from protobuf field <code>string region = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setRegion($var)
    {
        GPBUtil::checkString($var, True);
        $this->region = $var;

        return $this;
    }

    /**
     * The user/org that this compute cluster belongs to.
     *
     * Generated from protobuf field <code>string user_id = 5;</code>
     * @return string
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * The user/org that this compute cluster belongs to.
     *
     * Generated from protobuf field <code>string user_id = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->user_id = $var;

        return $this;
    }

    /**
     * When the compute cluster was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 6;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    public function hasCreatedAt()
    {
        return isset($this->created_at);
    }

    public function clearCreatedAt()
    {
        unset($this->created_at);
    }

    /**
     * When the compute cluster was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 6;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreatedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created_at = $var;

        return $this;
    }

    /**
     * When the compute cluster was last modified.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp modified_at = 7;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getModifiedAt()
    {
        return $this->modified_at;
    }

    public function hasModifiedAt()
    {
        return isset($this->modified_at);
    }

    public function clearModifiedAt()
    {
        unset($this->modified_at);
    }

    /**
     * When the compute cluster was last modified.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp modified_at = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setModifiedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->modified_at = $var;

        return $this;
    }

    /**
     * The visibility field represents whether this message is privately/publicly visible.
     * To be visible to the public the App that contains it AND the User that contains the App must
     * also be publicly visible.
     *
     * Generated from protobuf field <code>.clarifai.api.Visibility visibility = 8;</code>
     * @return \Clarifai\Api\Visibility|null
     */
    public function getVisibility()
    {
        return $this->visibility;
    }

    public function hasVisibility()
    {
        return isset($this->visibility);
    }

    public function clearVisibility()
    {
        unset($this->visibility);
    }

    /**
     * The visibility field represents whether this message is privately/publicly visible.
     * To be visible to the public the App that contains it AND the User that contains the App must
     * also be publicly visible.
     *
     * Generated from protobuf field <code>.clarifai.api.Visibility visibility = 8;</code>
     * @param \Clarifai\Api\Visibility $var
     * @return $this
     */
    public function setVisibility($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Visibility::class);
        $this->visibility = $var;

        return $this;
    }

    /**
     * We offer different types of compute clusters such as:
     * 'shared' which only Clarifai can create.
     * 'dedicated' where you're in control of defining the nodepools within the cluster
     * 'local-dev' which means you're responsible for starting runners manually which is great for local
     * development but not recommended for production use cases.
     *
     * Generated from protobuf field <code>string cluster_type = 9;</code>
     * @return string
     */
    public function getClusterType()
    {
        return $this->cluster_type;
    }

    /**
     * We offer different types of compute clusters such as:
     * 'shared' which only Clarifai can create.
     * 'dedicated' where you're in control of defining the nodepools within the cluster
     * 'local-dev' which means you're responsible for starting runners manually which is great for local
     * development but not recommended for production use cases.
     *
     * Generated from protobuf field <code>string cluster_type = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setClusterType($var)
    {
        GPBUtil::checkString($var, True);
        $this->cluster_type = $var;

        return $this;
    }

    /**
     * Managed by represents who is responsible for the cluster.
     * This is currently either "clarifai" where we fully manage the infrastructure.
     * Or, "user" where the user is responsible for the underlying infrastructure.
     *
     * Generated from protobuf field <code>string managed_by = 10;</code>
     * @return string
     */
    public function getManagedBy()
    {
        return $this->managed_by;
    }

    /**
     * Managed by represents who is responsible for the cluster.
     * This is currently either "clarifai" where we fully manage the infrastructure.
     * Or, "user" where the user is responsible for the underlying infrastructure.
     *
     * Generated from protobuf field <code>string managed_by = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setManagedBy($var)
    {
        GPBUtil::checkString($var, True);
        $this->managed_by = $var;

        return $this;
    }

    /**
     * Key to use within the compute cluster for all requests to the API.
     * You can post with the key.id filled in to set the key for the compute cluster.
     * The responses will intentionaly only return the description of the key for security
     * purposes since you may have other people through orgs/teams having access to this compute
     * cluster who should not view your key.
     * This must be a valid key created before creating the ComputeCluster.
     * Deleting this key will not be prevented, which means all resources in this ComputeCluster
     * will lose connection to the API, so delete keys at your own risk.
     * The user_id who owns the key must match the user_id provided in the ComputeCluster.
     *
     * Generated from protobuf field <code>.clarifai.api.Key key = 11;</code>
     * @return \Clarifai\Api\Key|null
     */
    public function getKey()
    {
        return $this->key;
    }

    public function hasKey()
    {
        return isset($this->key);
    }

    public function clearKey()
    {
        unset($this->key);
    }

    /**
     * Key to use within the compute cluster for all requests to the API.
     * You can post with the key.id filled in to set the key for the compute cluster.
     * The responses will intentionaly only return the description of the key for security
     * purposes since you may have other people through orgs/teams having access to this compute
     * cluster who should not view your key.
     * This must be a valid key created before creating the ComputeCluster.
     * Deleting this key will not be prevented, which means all resources in this ComputeCluster
     * will lose connection to the API, so delete keys at your own risk.
     * The user_id who owns the key must match the user_id provided in the ComputeCluster.
     *
     * Generated from protobuf field <code>.clarifai.api.Key key = 11;</code>
     * @param \Clarifai\Api\Key $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Key::class);
        $this->key = $var;

        return $this;
    }

}

