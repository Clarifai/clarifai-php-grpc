<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use UnexpectedValueException;

/**
 * Protobuf type <code>clarifai.api.LicenseType</code>
 */
class LicenseType
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_LICENSE_TYPE = 0;</code>
     */
    const UNKNOWN_LICENSE_TYPE = 0;
    /**
     * Generated from protobuf enum <code>FIRST_PARTY = 1;</code>
     */
    const FIRST_PARTY = 1;
    /**
     * Generated from protobuf enum <code>OPEN_SOURCE = 2;</code>
     */
    const OPEN_SOURCE = 2;
    /**
     * Generated from protobuf enum <code>CLOSED_SOURCE = 3;</code>
     */
    const CLOSED_SOURCE = 3;

    private static $valueToName = [
        self::UNKNOWN_LICENSE_TYPE => 'UNKNOWN_LICENSE_TYPE',
        self::FIRST_PARTY => 'FIRST_PARTY',
        self::OPEN_SOURCE => 'OPEN_SOURCE',
        self::CLOSED_SOURCE => 'CLOSED_SOURCE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

