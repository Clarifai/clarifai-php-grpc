<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ListAnnotationsRequest
 *
 * Generated from protobuf message <code>clarifai.api.ListAnnotationsRequest</code>
 */
class ListAnnotationsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     */
    protected $user_app_id = null;
    /**
     * List annotations for these IDs
     *
     * Generated from protobuf field <code>repeated string ids = 2;</code>
     */
    private $ids;
    /**
     * List annotations for these Input IDs
     * Note that 'ids' are optional but if the are provided the number and order in
     * 'ids' and 'input_ids' should match
     * If you do not specify 'ids' all the annotations for 'input_ids' are returned
     * If a you do not specify both 'input_ids' and 'ids' all the annotations in the app are returned
     *
     * Generated from protobuf field <code>repeated string input_ids = 3;</code>
     */
    private $input_ids;
    /**
     * Only return the annotations that has one of these user IDs, effectively operating as an
     * OR among them to filter down the results.
     * If model_version_ids are also provided these user_ids are OR'd with them as well since
     * annotations are either provided by users or model versions and we want the union of any
     * provided user or model version annotations in the results of ListAnnotations request.
     * If no user_ids are provided then annotations from all users are returned.
     *
     * Generated from protobuf field <code>repeated string user_ids = 9;</code>
     */
    private $user_ids;
    /**
     * Only return the annotations that has one of these model version IDs, effectively operating as an
     * OR among them to filter down the results.
     * If user_ids are also provided these model_versions_ids are OR'd with them as well since
     * annotations are either provided by users or model versions and we want the union of any
     * provided user or model version annotations in the results of ListAnnotations request.
     * If no model_version_ids are provided then annotations from all model versions are returned.
     *
     * Generated from protobuf field <code>repeated string model_version_ids = 10;</code>
     */
    private $model_version_ids;
    /**
     * Set status to filter by a list of statuses
     * If not statuses are provided then annotations with any status will be returned.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.status.Status statuses = 5;</code>
     */
    private $statuses;
    /**
     * Set this flag to list both trusted and not trusted annotations
     * by default it's listing only trusted annotations
     *
     * Generated from protobuf field <code>bool list_all_annotations = 6;</code>
     */
    protected $list_all_annotations = false;
    /**
     * (optional URL parameter) The page number. Pagination is used to split the results into chunks.
     * Defaults to 1.
     *
     * Generated from protobuf field <code>uint32 page = 7;</code>
     */
    protected $page = 0;
    /**
     * (optional URL parameter) The number of results that will be contained in each page. Defaults
     * to 128.
     *
     * Generated from protobuf field <code>uint32 per_page = 8;</code>
     */
    protected $per_page = 0;
    /**
     * Flag to filter annotations by task_id
     *
     * Generated from protobuf field <code>string task_id = 11;</code>
     */
    protected $task_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\UserAppIDSet $user_app_id
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $ids
     *           List annotations for these IDs
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $input_ids
     *           List annotations for these Input IDs
     *           Note that 'ids' are optional but if the are provided the number and order in
     *           'ids' and 'input_ids' should match
     *           If you do not specify 'ids' all the annotations for 'input_ids' are returned
     *           If a you do not specify both 'input_ids' and 'ids' all the annotations in the app are returned
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $user_ids
     *           Only return the annotations that has one of these user IDs, effectively operating as an
     *           OR among them to filter down the results.
     *           If model_version_ids are also provided these user_ids are OR'd with them as well since
     *           annotations are either provided by users or model versions and we want the union of any
     *           provided user or model version annotations in the results of ListAnnotations request.
     *           If no user_ids are provided then annotations from all users are returned.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $model_version_ids
     *           Only return the annotations that has one of these model version IDs, effectively operating as an
     *           OR among them to filter down the results.
     *           If user_ids are also provided these model_versions_ids are OR'd with them as well since
     *           annotations are either provided by users or model versions and we want the union of any
     *           provided user or model version annotations in the results of ListAnnotations request.
     *           If no model_version_ids are provided then annotations from all model versions are returned.
     *     @type \Clarifai\Api\Status\Status[]|\Google\Protobuf\Internal\RepeatedField $statuses
     *           Set status to filter by a list of statuses
     *           If not statuses are provided then annotations with any status will be returned.
     *     @type bool $list_all_annotations
     *           Set this flag to list both trusted and not trusted annotations
     *           by default it's listing only trusted annotations
     *     @type int $page
     *           (optional URL parameter) The page number. Pagination is used to split the results into chunks.
     *           Defaults to 1.
     *     @type int $per_page
     *           (optional URL parameter) The number of results that will be contained in each page. Defaults
     *           to 128.
     *     @type string $task_id
     *           Flag to filter annotations by task_id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @return \Clarifai\Api\UserAppIDSet
     */
    public function getUserAppId()
    {
        return $this->user_app_id;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @param \Clarifai\Api\UserAppIDSet $var
     * @return $this
     */
    public function setUserAppId($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\UserAppIDSet::class);
        $this->user_app_id = $var;

        return $this;
    }

    /**
     * List annotations for these IDs
     *
     * Generated from protobuf field <code>repeated string ids = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIds()
    {
        return $this->ids;
    }

    /**
     * List annotations for these IDs
     *
     * Generated from protobuf field <code>repeated string ids = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->ids = $arr;

        return $this;
    }

    /**
     * List annotations for these Input IDs
     * Note that 'ids' are optional but if the are provided the number and order in
     * 'ids' and 'input_ids' should match
     * If you do not specify 'ids' all the annotations for 'input_ids' are returned
     * If a you do not specify both 'input_ids' and 'ids' all the annotations in the app are returned
     *
     * Generated from protobuf field <code>repeated string input_ids = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInputIds()
    {
        return $this->input_ids;
    }

    /**
     * List annotations for these Input IDs
     * Note that 'ids' are optional but if the are provided the number and order in
     * 'ids' and 'input_ids' should match
     * If you do not specify 'ids' all the annotations for 'input_ids' are returned
     * If a you do not specify both 'input_ids' and 'ids' all the annotations in the app are returned
     *
     * Generated from protobuf field <code>repeated string input_ids = 3;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInputIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->input_ids = $arr;

        return $this;
    }

    /**
     * Only return the annotations that has one of these user IDs, effectively operating as an
     * OR among them to filter down the results.
     * If model_version_ids are also provided these user_ids are OR'd with them as well since
     * annotations are either provided by users or model versions and we want the union of any
     * provided user or model version annotations in the results of ListAnnotations request.
     * If no user_ids are provided then annotations from all users are returned.
     *
     * Generated from protobuf field <code>repeated string user_ids = 9;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUserIds()
    {
        return $this->user_ids;
    }

    /**
     * Only return the annotations that has one of these user IDs, effectively operating as an
     * OR among them to filter down the results.
     * If model_version_ids are also provided these user_ids are OR'd with them as well since
     * annotations are either provided by users or model versions and we want the union of any
     * provided user or model version annotations in the results of ListAnnotations request.
     * If no user_ids are provided then annotations from all users are returned.
     *
     * Generated from protobuf field <code>repeated string user_ids = 9;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUserIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->user_ids = $arr;

        return $this;
    }

    /**
     * Only return the annotations that has one of these model version IDs, effectively operating as an
     * OR among them to filter down the results.
     * If user_ids are also provided these model_versions_ids are OR'd with them as well since
     * annotations are either provided by users or model versions and we want the union of any
     * provided user or model version annotations in the results of ListAnnotations request.
     * If no model_version_ids are provided then annotations from all model versions are returned.
     *
     * Generated from protobuf field <code>repeated string model_version_ids = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getModelVersionIds()
    {
        return $this->model_version_ids;
    }

    /**
     * Only return the annotations that has one of these model version IDs, effectively operating as an
     * OR among them to filter down the results.
     * If user_ids are also provided these model_versions_ids are OR'd with them as well since
     * annotations are either provided by users or model versions and we want the union of any
     * provided user or model version annotations in the results of ListAnnotations request.
     * If no model_version_ids are provided then annotations from all model versions are returned.
     *
     * Generated from protobuf field <code>repeated string model_version_ids = 10;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setModelVersionIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->model_version_ids = $arr;

        return $this;
    }

    /**
     * Set status to filter by a list of statuses
     * If not statuses are provided then annotations with any status will be returned.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.status.Status statuses = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getStatuses()
    {
        return $this->statuses;
    }

    /**
     * Set status to filter by a list of statuses
     * If not statuses are provided then annotations with any status will be returned.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.status.Status statuses = 5;</code>
     * @param \Clarifai\Api\Status\Status[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setStatuses($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Clarifai\Api\Status\Status::class);
        $this->statuses = $arr;

        return $this;
    }

    /**
     * Set this flag to list both trusted and not trusted annotations
     * by default it's listing only trusted annotations
     *
     * Generated from protobuf field <code>bool list_all_annotations = 6;</code>
     * @return bool
     */
    public function getListAllAnnotations()
    {
        return $this->list_all_annotations;
    }

    /**
     * Set this flag to list both trusted and not trusted annotations
     * by default it's listing only trusted annotations
     *
     * Generated from protobuf field <code>bool list_all_annotations = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setListAllAnnotations($var)
    {
        GPBUtil::checkBool($var);
        $this->list_all_annotations = $var;

        return $this;
    }

    /**
     * (optional URL parameter) The page number. Pagination is used to split the results into chunks.
     * Defaults to 1.
     *
     * Generated from protobuf field <code>uint32 page = 7;</code>
     * @return int
     */
    public function getPage()
    {
        return $this->page;
    }

    /**
     * (optional URL parameter) The page number. Pagination is used to split the results into chunks.
     * Defaults to 1.
     *
     * Generated from protobuf field <code>uint32 page = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setPage($var)
    {
        GPBUtil::checkUint32($var);
        $this->page = $var;

        return $this;
    }

    /**
     * (optional URL parameter) The number of results that will be contained in each page. Defaults
     * to 128.
     *
     * Generated from protobuf field <code>uint32 per_page = 8;</code>
     * @return int
     */
    public function getPerPage()
    {
        return $this->per_page;
    }

    /**
     * (optional URL parameter) The number of results that will be contained in each page. Defaults
     * to 128.
     *
     * Generated from protobuf field <code>uint32 per_page = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setPerPage($var)
    {
        GPBUtil::checkUint32($var);
        $this->per_page = $var;

        return $this;
    }

    /**
     * Flag to filter annotations by task_id
     *
     * Generated from protobuf field <code>string task_id = 11;</code>
     * @return string
     */
    public function getTaskId()
    {
        return $this->task_id;
    }

    /**
     * Flag to filter annotations by task_id
     *
     * Generated from protobuf field <code>string task_id = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setTaskId($var)
    {
        GPBUtil::checkString($var, True);
        $this->task_id = $var;

        return $this;
    }

}

