<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use UnexpectedValueException;

/**
 * Protobuf type <code>clarifai.api.DatasetVersionMetricsGroupType</code>
 */
class DatasetVersionMetricsGroupType
{
    /**
     * Generated from protobuf enum <code>DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET = 0;</code>
     */
    const DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET = 0;
    /**
     * Group data examples by input type.
     * Examples: images, videos, text, audio.
     *
     * Generated from protobuf enum <code>INPUT_TYPE = 2;</code>
     */
    const INPUT_TYPE = 2;
    /**
     * Group data examples by concept ID.
     * Examples: inputs with cat concept, inputs with dog concept.
     *
     * Generated from protobuf enum <code>CONCEPT_ID = 10;</code>
     */
    const CONCEPT_ID = 10;
    /**
     * Group data examples by concepts count.
     * Examples: inputs with 20 concepts, inputs with 21 concepts.
     *
     * Generated from protobuf enum <code>CONCEPTS_COUNT = 11;</code>
     */
    const CONCEPTS_COUNT = 11;
    /**
     * Group data examples by bounding boxes count.
     * Examples: inputs with 20 bounding boxes, inputs with 21 bounding boxes.
     *
     * Generated from protobuf enum <code>BOUNDING_BOXES_COUNT = 20;</code>
     */
    const BOUNDING_BOXES_COUNT = 20;
    /**
     * Group data examples by polygons count.
     * Examples: inputs with 20 polygons, inputs with 21 polygons.
     *
     * Generated from protobuf enum <code>POLYGONS_COUNT = 21;</code>
     */
    const POLYGONS_COUNT = 21;
    /**
     * Group data examples by points count.
     * Examples: inputs with 20 points, inputs with 21 points.
     *
     * Generated from protobuf enum <code>POINTS_COUNT = 22;</code>
     */
    const POINTS_COUNT = 22;
    /**
     * Group data examples by masks count.
     * Examples: inputs with 20 masks, inputs with 21 masks.
     *
     * Generated from protobuf enum <code>MASKS_COUNT = 23;</code>
     */
    const MASKS_COUNT = 23;
    /**
     * Group data examples by pixels count.
     * In order to reduce the number of groups, we use bins.
     * Examples for bin size = 400: inputs with [200000, 200400) pixels, inputs with [200400, 200800) pixels.
     *
     * Generated from protobuf enum <code>PIXELS_COUNT = 30;</code>
     */
    const PIXELS_COUNT = 30;
    /**
     * Group data examples by aspect ratio.
     * In order to reduce the number of groups, we use bins.
     * Examples for bin size = 0.1: inputs with [0.5, 0.6) aspect ratio, inputs with [0.6, 0.7) aspect ratio.
     *
     * Generated from protobuf enum <code>ASPECT_RATIO = 31;</code>
     */
    const ASPECT_RATIO = 31;

    private static $valueToName = [
        self::DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET => 'DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET',
        self::INPUT_TYPE => 'INPUT_TYPE',
        self::CONCEPT_ID => 'CONCEPT_ID',
        self::CONCEPTS_COUNT => 'CONCEPTS_COUNT',
        self::BOUNDING_BOXES_COUNT => 'BOUNDING_BOXES_COUNT',
        self::POLYGONS_COUNT => 'POLYGONS_COUNT',
        self::POINTS_COUNT => 'POINTS_COUNT',
        self::MASKS_COUNT => 'MASKS_COUNT',
        self::PIXELS_COUNT => 'PIXELS_COUNT',
        self::ASPECT_RATIO => 'ASPECT_RATIO',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

