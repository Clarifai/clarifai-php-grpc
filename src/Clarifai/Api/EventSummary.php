<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * EventSummary
 *
 * Generated from protobuf message <code>clarifai.api.EventSummary</code>
 */
class EventSummary extends \Google\Protobuf\Internal\Message
{
    /**
     * the type of event
     *
     * Generated from protobuf field <code>.clarifai.api.APIEventType event_type = 1;</code>
     */
    protected $event_type = 0;
    /**
     * the model on which the event happens, can be empty
     *
     * Generated from protobuf field <code>.clarifai.api.Model model = 2;</code>
     */
    protected $model = null;
    /**
     * the number of event
     *
     * Generated from protobuf field <code>uint64 count = 3;</code>
     */
    protected $count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $event_type
     *           the type of event
     *     @type \Clarifai\Api\Model $model
     *           the model on which the event happens, can be empty
     *     @type int|string $count
     *           the number of event
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * the type of event
     *
     * Generated from protobuf field <code>.clarifai.api.APIEventType event_type = 1;</code>
     * @return int
     */
    public function getEventType()
    {
        return $this->event_type;
    }

    /**
     * the type of event
     *
     * Generated from protobuf field <code>.clarifai.api.APIEventType event_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setEventType($var)
    {
        GPBUtil::checkEnum($var, \Clarifai\Api\APIEventType::class);
        $this->event_type = $var;

        return $this;
    }

    /**
     * the model on which the event happens, can be empty
     *
     * Generated from protobuf field <code>.clarifai.api.Model model = 2;</code>
     * @return \Clarifai\Api\Model|null
     */
    public function getModel()
    {
        return $this->model;
    }

    public function hasModel()
    {
        return isset($this->model);
    }

    public function clearModel()
    {
        unset($this->model);
    }

    /**
     * the model on which the event happens, can be empty
     *
     * Generated from protobuf field <code>.clarifai.api.Model model = 2;</code>
     * @param \Clarifai\Api\Model $var
     * @return $this
     */
    public function setModel($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Model::class);
        $this->model = $var;

        return $this;
    }

    /**
     * the number of event
     *
     * Generated from protobuf field <code>uint64 count = 3;</code>
     * @return int|string
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * the number of event
     *
     * Generated from protobuf field <code>uint64 count = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkUint64($var);
        $this->count = $var;

        return $this;
    }

}

