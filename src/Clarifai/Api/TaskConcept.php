<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.TaskConcept</code>
 */
class TaskConcept extends \Google\Protobuf\Internal\Message
{
    /**
     * For auto annotation, id/name and value, user + app id must be specified. For other tasks, only the id field is required.
     *
     * Generated from protobuf field <code>.clarifai.api.Concept concept = 1;</code>
     */
    protected $concept = null;
    /**
     * Generated from protobuf field <code>.clarifai.api.TaskConceptAutoAnnotationConfig auto_annotation_config = 2;</code>
     */
    protected $auto_annotation_config = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\Concept $concept
     *           For auto annotation, id/name and value, user + app id must be specified. For other tasks, only the id field is required.
     *     @type \Clarifai\Api\TaskConceptAutoAnnotationConfig $auto_annotation_config
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * For auto annotation, id/name and value, user + app id must be specified. For other tasks, only the id field is required.
     *
     * Generated from protobuf field <code>.clarifai.api.Concept concept = 1;</code>
     * @return \Clarifai\Api\Concept|null
     */
    public function getConcept()
    {
        return $this->concept;
    }

    public function hasConcept()
    {
        return isset($this->concept);
    }

    public function clearConcept()
    {
        unset($this->concept);
    }

    /**
     * For auto annotation, id/name and value, user + app id must be specified. For other tasks, only the id field is required.
     *
     * Generated from protobuf field <code>.clarifai.api.Concept concept = 1;</code>
     * @param \Clarifai\Api\Concept $var
     * @return $this
     */
    public function setConcept($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Concept::class);
        $this->concept = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.TaskConceptAutoAnnotationConfig auto_annotation_config = 2;</code>
     * @return \Clarifai\Api\TaskConceptAutoAnnotationConfig|null
     */
    public function getAutoAnnotationConfig()
    {
        return $this->auto_annotation_config;
    }

    public function hasAutoAnnotationConfig()
    {
        return isset($this->auto_annotation_config);
    }

    public function clearAutoAnnotationConfig()
    {
        unset($this->auto_annotation_config);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.TaskConceptAutoAnnotationConfig auto_annotation_config = 2;</code>
     * @param \Clarifai\Api\TaskConceptAutoAnnotationConfig $var
     * @return $this
     */
    public function setAutoAnnotationConfig($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\TaskConceptAutoAnnotationConfig::class);
        $this->auto_annotation_config = $var;

        return $this;
    }

}

