<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PrecisionRecallCurve
 *
 * Generated from protobuf message <code>clarifai.api.PrecisionRecallCurve</code>
 */
class PrecisionRecallCurve extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated float recall = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    private $recall;
    /**
     * Generated from protobuf field <code>repeated float precision = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    private $precision;
    /**
     * Generated from protobuf field <code>repeated float thresholds = 3 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    private $thresholds;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float[]|\Google\Protobuf\Internal\RepeatedField $recall
     *     @type float[]|\Google\Protobuf\Internal\RepeatedField $precision
     *     @type float[]|\Google\Protobuf\Internal\RepeatedField $thresholds
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated float recall = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRecall()
    {
        return $this->recall;
    }

    /**
     * Generated from protobuf field <code>repeated float recall = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param float[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRecall($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->recall = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated float precision = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPrecision()
    {
        return $this->precision;
    }

    /**
     * Generated from protobuf field <code>repeated float precision = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param float[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPrecision($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->precision = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated float thresholds = 3 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getThresholds()
    {
        return $this->thresholds;
    }

    /**
     * Generated from protobuf field <code>repeated float thresholds = 3 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param float[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setThresholds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->thresholds = $arr;

        return $this;
    }

}

