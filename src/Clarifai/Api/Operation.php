<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.Operation</code>
 */
class Operation extends \Google\Protobuf\Internal\Message
{
    protected $operation;
    protected $annotation_operation;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\AddConcepts $add_concepts
     *     @type \Clarifai\Api\DeleteConcepts $delete_concepts
     *     @type \Clarifai\Api\AddMetadata $add_metadata
     *     @type \Clarifai\Api\DeleteMetadata $delete_metadata
     *     @type \Clarifai\Api\OverwriteGeo $overwrite_geo
     *     @type \Clarifai\Api\DeleteGeo $delete_geo
     *     @type \Clarifai\Api\DeleteFromDataset $delete_from_dataset
     *     @type \Clarifai\Api\AddToDataset $add_to_dataset
     *     @type \Clarifai\Api\SplitIntoDatasets $split_into_datasets
     *     @type \Clarifai\Api\DeleteAnnotations $delete_annotations
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.AddConcepts add_concepts = 1;</code>
     * @return \Clarifai\Api\AddConcepts|null
     */
    public function getAddConcepts()
    {
        return $this->readOneof(1);
    }

    public function hasAddConcepts()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.AddConcepts add_concepts = 1;</code>
     * @param \Clarifai\Api\AddConcepts $var
     * @return $this
     */
    public function setAddConcepts($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\AddConcepts::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteConcepts delete_concepts = 2;</code>
     * @return \Clarifai\Api\DeleteConcepts|null
     */
    public function getDeleteConcepts()
    {
        return $this->readOneof(2);
    }

    public function hasDeleteConcepts()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteConcepts delete_concepts = 2;</code>
     * @param \Clarifai\Api\DeleteConcepts $var
     * @return $this
     */
    public function setDeleteConcepts($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\DeleteConcepts::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.AddMetadata add_metadata = 3;</code>
     * @return \Clarifai\Api\AddMetadata|null
     */
    public function getAddMetadata()
    {
        return $this->readOneof(3);
    }

    public function hasAddMetadata()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.AddMetadata add_metadata = 3;</code>
     * @param \Clarifai\Api\AddMetadata $var
     * @return $this
     */
    public function setAddMetadata($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\AddMetadata::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteMetadata delete_metadata = 4;</code>
     * @return \Clarifai\Api\DeleteMetadata|null
     */
    public function getDeleteMetadata()
    {
        return $this->readOneof(4);
    }

    public function hasDeleteMetadata()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteMetadata delete_metadata = 4;</code>
     * @param \Clarifai\Api\DeleteMetadata $var
     * @return $this
     */
    public function setDeleteMetadata($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\DeleteMetadata::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.OverwriteGeo overwrite_geo = 5;</code>
     * @return \Clarifai\Api\OverwriteGeo|null
     */
    public function getOverwriteGeo()
    {
        return $this->readOneof(5);
    }

    public function hasOverwriteGeo()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.OverwriteGeo overwrite_geo = 5;</code>
     * @param \Clarifai\Api\OverwriteGeo $var
     * @return $this
     */
    public function setOverwriteGeo($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\OverwriteGeo::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteGeo delete_geo = 6;</code>
     * @return \Clarifai\Api\DeleteGeo|null
     */
    public function getDeleteGeo()
    {
        return $this->readOneof(6);
    }

    public function hasDeleteGeo()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteGeo delete_geo = 6;</code>
     * @param \Clarifai\Api\DeleteGeo $var
     * @return $this
     */
    public function setDeleteGeo($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\DeleteGeo::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteFromDataset delete_from_dataset = 7;</code>
     * @return \Clarifai\Api\DeleteFromDataset|null
     */
    public function getDeleteFromDataset()
    {
        return $this->readOneof(7);
    }

    public function hasDeleteFromDataset()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteFromDataset delete_from_dataset = 7;</code>
     * @param \Clarifai\Api\DeleteFromDataset $var
     * @return $this
     */
    public function setDeleteFromDataset($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\DeleteFromDataset::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.AddToDataset add_to_dataset = 8;</code>
     * @return \Clarifai\Api\AddToDataset|null
     */
    public function getAddToDataset()
    {
        return $this->readOneof(8);
    }

    public function hasAddToDataset()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.AddToDataset add_to_dataset = 8;</code>
     * @param \Clarifai\Api\AddToDataset $var
     * @return $this
     */
    public function setAddToDataset($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\AddToDataset::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.SplitIntoDatasets split_into_datasets = 9;</code>
     * @return \Clarifai\Api\SplitIntoDatasets|null
     */
    public function getSplitIntoDatasets()
    {
        return $this->readOneof(9);
    }

    public function hasSplitIntoDatasets()
    {
        return $this->hasOneof(9);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.SplitIntoDatasets split_into_datasets = 9;</code>
     * @param \Clarifai\Api\SplitIntoDatasets $var
     * @return $this
     */
    public function setSplitIntoDatasets($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\SplitIntoDatasets::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteAnnotations delete_annotations = 10;</code>
     * @return \Clarifai\Api\DeleteAnnotations|null
     */
    public function getDeleteAnnotations()
    {
        return $this->readOneof(10);
    }

    public function hasDeleteAnnotations()
    {
        return $this->hasOneof(10);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.DeleteAnnotations delete_annotations = 10;</code>
     * @param \Clarifai\Api\DeleteAnnotations $var
     * @return $this
     */
    public function setDeleteAnnotations($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\DeleteAnnotations::class);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getOperation()
    {
        return $this->whichOneof("operation");
    }

    /**
     * @return string
     */
    public function getAnnotationOperation()
    {
        return $this->whichOneof("annotation_operation");
    }

}

