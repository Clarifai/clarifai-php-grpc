<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The instance types that will be available in this pool of nodes.
 * Clarifai offers multiple different choices that combine cpu cores, memory and accelerator.
 *
 * Generated from protobuf message <code>clarifai.api.InstanceType</code>
 */
class InstanceType extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Short description of instance type.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     */
    protected $description = '';
    /**
     * Generated from protobuf field <code>.clarifai.api.ComputeInfo compute_info = 3;</code>
     */
    protected $compute_info = null;
    /**
     * Generated from protobuf field <code>string price = 4;</code>
     */
    protected $price = '';
    /**
     * The cloud provider where this instance type is available, if any.
     *
     * Generated from protobuf field <code>.clarifai.api.CloudProvider cloud_provider = 5;</code>
     */
    protected $cloud_provider = null;
    /**
     * The region where this instance type is available, if any.
     *
     * Generated from protobuf field <code>string region = 6;</code>
     */
    protected $region = '';
    /**
     * The capacity types allowed for this instance type. If empty - all capacity types are allowed.
     *
     * Generated from protobuf field <code>.clarifai.api.NodeCapacityType allowed_capacity_types = 7;</code>
     */
    protected $allowed_capacity_types = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $description
     *           Short description of instance type.
     *     @type \Clarifai\Api\ComputeInfo $compute_info
     *     @type string $price
     *     @type \Clarifai\Api\CloudProvider $cloud_provider
     *           The cloud provider where this instance type is available, if any.
     *     @type string $region
     *           The region where this instance type is available, if any.
     *     @type \Clarifai\Api\NodeCapacityType $allowed_capacity_types
     *           The capacity types allowed for this instance type. If empty - all capacity types are allowed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Short description of instance type.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Short description of instance type.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.ComputeInfo compute_info = 3;</code>
     * @return \Clarifai\Api\ComputeInfo|null
     */
    public function getComputeInfo()
    {
        return $this->compute_info;
    }

    public function hasComputeInfo()
    {
        return isset($this->compute_info);
    }

    public function clearComputeInfo()
    {
        unset($this->compute_info);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.ComputeInfo compute_info = 3;</code>
     * @param \Clarifai\Api\ComputeInfo $var
     * @return $this
     */
    public function setComputeInfo($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\ComputeInfo::class);
        $this->compute_info = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string price = 4;</code>
     * @return string
     */
    public function getPrice()
    {
        return $this->price;
    }

    /**
     * Generated from protobuf field <code>string price = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPrice($var)
    {
        GPBUtil::checkString($var, True);
        $this->price = $var;

        return $this;
    }

    /**
     * The cloud provider where this instance type is available, if any.
     *
     * Generated from protobuf field <code>.clarifai.api.CloudProvider cloud_provider = 5;</code>
     * @return \Clarifai\Api\CloudProvider|null
     */
    public function getCloudProvider()
    {
        return $this->cloud_provider;
    }

    public function hasCloudProvider()
    {
        return isset($this->cloud_provider);
    }

    public function clearCloudProvider()
    {
        unset($this->cloud_provider);
    }

    /**
     * The cloud provider where this instance type is available, if any.
     *
     * Generated from protobuf field <code>.clarifai.api.CloudProvider cloud_provider = 5;</code>
     * @param \Clarifai\Api\CloudProvider $var
     * @return $this
     */
    public function setCloudProvider($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\CloudProvider::class);
        $this->cloud_provider = $var;

        return $this;
    }

    /**
     * The region where this instance type is available, if any.
     *
     * Generated from protobuf field <code>string region = 6;</code>
     * @return string
     */
    public function getRegion()
    {
        return $this->region;
    }

    /**
     * The region where this instance type is available, if any.
     *
     * Generated from protobuf field <code>string region = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setRegion($var)
    {
        GPBUtil::checkString($var, True);
        $this->region = $var;

        return $this;
    }

    /**
     * The capacity types allowed for this instance type. If empty - all capacity types are allowed.
     *
     * Generated from protobuf field <code>.clarifai.api.NodeCapacityType allowed_capacity_types = 7;</code>
     * @return \Clarifai\Api\NodeCapacityType|null
     */
    public function getAllowedCapacityTypes()
    {
        return $this->allowed_capacity_types;
    }

    public function hasAllowedCapacityTypes()
    {
        return isset($this->allowed_capacity_types);
    }

    public function clearAllowedCapacityTypes()
    {
        unset($this->allowed_capacity_types);
    }

    /**
     * The capacity types allowed for this instance type. If empty - all capacity types are allowed.
     *
     * Generated from protobuf field <code>.clarifai.api.NodeCapacityType allowed_capacity_types = 7;</code>
     * @param \Clarifai\Api\NodeCapacityType $var
     * @return $this
     */
    public function setAllowedCapacityTypes($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\NodeCapacityType::class);
        $this->allowed_capacity_types = $var;

        return $this;
    }

}

