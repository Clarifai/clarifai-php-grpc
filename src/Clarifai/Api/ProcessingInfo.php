<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Processing info tells the runner how to process a RunnerItem
 *
 * Generated from protobuf message <code>clarifai.api.ProcessingInfo</code>
 */
class ProcessingInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * The type of method witin the runner to call.
     *
     * Generated from protobuf field <code>.clarifai.api.RunnerMethodType runner_method_type = 1;</code>
     */
    protected $runner_method_type = 0;
    /**
     * A status of the processing. We use this for signalling end of a request stream, a runner
     * item's processing should be cancelled, etc.
     *
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 2;</code>
     */
    protected $status = null;
    /**
     * Internal field to track processing. Runners will not have access to this.
     *
     * Generated from protobuf field <code>string processing_id = 3;</code>
     */
    protected $processing_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $runner_method_type
     *           The type of method witin the runner to call.
     *     @type \Clarifai\Api\Status\Status $status
     *           A status of the processing. We use this for signalling end of a request stream, a runner
     *           item's processing should be cancelled, etc.
     *     @type string $processing_id
     *           Internal field to track processing. Runners will not have access to this.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * The type of method witin the runner to call.
     *
     * Generated from protobuf field <code>.clarifai.api.RunnerMethodType runner_method_type = 1;</code>
     * @return int
     */
    public function getRunnerMethodType()
    {
        return $this->runner_method_type;
    }

    /**
     * The type of method witin the runner to call.
     *
     * Generated from protobuf field <code>.clarifai.api.RunnerMethodType runner_method_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setRunnerMethodType($var)
    {
        GPBUtil::checkEnum($var, \Clarifai\Api\RunnerMethodType::class);
        $this->runner_method_type = $var;

        return $this;
    }

    /**
     * A status of the processing. We use this for signalling end of a request stream, a runner
     * item's processing should be cancelled, etc.
     *
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 2;</code>
     * @return \Clarifai\Api\Status\Status|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    public function hasStatus()
    {
        return isset($this->status);
    }

    public function clearStatus()
    {
        unset($this->status);
    }

    /**
     * A status of the processing. We use this for signalling end of a request stream, a runner
     * item's processing should be cancelled, etc.
     *
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 2;</code>
     * @param \Clarifai\Api\Status\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Status\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * Internal field to track processing. Runners will not have access to this.
     *
     * Generated from protobuf field <code>string processing_id = 3;</code>
     * @return string
     */
    public function getProcessingId()
    {
        return $this->processing_id;
    }

    /**
     * Internal field to track processing. Runners will not have access to this.
     *
     * Generated from protobuf field <code>string processing_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setProcessingId($var)
    {
        GPBUtil::checkString($var, True);
        $this->processing_id = $var;

        return $this;
    }

}

