<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use UnexpectedValueException;

/**
 * Protobuf type <code>clarifai.api.MetricLabel</code>
 */
class MetricLabel
{
    /**
     * Generated from protobuf enum <code>METRIC_LABEL_NOT_SET = 0;</code>
     */
    const METRIC_LABEL_NOT_SET = 0;
    /**
     * Generated from protobuf enum <code>APP_ID = 1;</code>
     */
    const APP_ID = 1;
    /**
     * Generated from protobuf enum <code>MODEL_ID = 2;</code>
     */
    const MODEL_ID = 2;
    /**
     * Generated from protobuf enum <code>MODEL_VERSION_ID = 3;</code>
     */
    const MODEL_VERSION_ID = 3;
    /**
     * Generated from protobuf enum <code>CALLER_USER_ID = 4;</code>
     */
    const CALLER_USER_ID = 4;
    /**
     * Generated from protobuf enum <code>WORKFLOW_ID = 5;</code>
     */
    const WORKFLOW_ID = 5;

    private static $valueToName = [
        self::METRIC_LABEL_NOT_SET => 'METRIC_LABEL_NOT_SET',
        self::APP_ID => 'APP_ID',
        self::MODEL_ID => 'MODEL_ID',
        self::MODEL_VERSION_ID => 'MODEL_VERSION_ID',
        self::CALLER_USER_ID => 'CALLER_USER_ID',
        self::WORKFLOW_ID => 'WORKFLOW_ID',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

