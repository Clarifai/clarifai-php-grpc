<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TagCategory
 *
 * Generated from protobuf message <code>clarifai.api.TagCategory</code>
 */
class TagCategory extends \Google\Protobuf\Internal\Message
{
    /**
     * Category name - use_case, license, toolkit or language
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * List of tags
     *
     * Generated from protobuf field <code>repeated string tags = 2;</code>
     */
    private $tags;
    /**
     * List of full tags
     *
     * Generated from protobuf field <code>repeated .clarifai.api.FullTag full_tags = 4;</code>
     */
    private $full_tags;
    /**
     * Does object support multiple tags of this kind
     *
     * Generated from protobuf field <code>bool supports_multiple = 3;</code>
     */
    protected $supports_multiple = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Category name - use_case, license, toolkit or language
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $tags
     *           List of tags
     *     @type \Clarifai\Api\FullTag[]|\Google\Protobuf\Internal\RepeatedField $full_tags
     *           List of full tags
     *     @type bool $supports_multiple
     *           Does object support multiple tags of this kind
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Category name - use_case, license, toolkit or language
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Category name - use_case, license, toolkit or language
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * List of tags
     *
     * Generated from protobuf field <code>repeated string tags = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTags()
    {
        return $this->tags;
    }

    /**
     * List of tags
     *
     * Generated from protobuf field <code>repeated string tags = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTags($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->tags = $arr;

        return $this;
    }

    /**
     * List of full tags
     *
     * Generated from protobuf field <code>repeated .clarifai.api.FullTag full_tags = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFullTags()
    {
        return $this->full_tags;
    }

    /**
     * List of full tags
     *
     * Generated from protobuf field <code>repeated .clarifai.api.FullTag full_tags = 4;</code>
     * @param \Clarifai\Api\FullTag[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFullTags($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Clarifai\Api\FullTag::class);
        $this->full_tags = $arr;

        return $this;
    }

    /**
     * Does object support multiple tags of this kind
     *
     * Generated from protobuf field <code>bool supports_multiple = 3;</code>
     * @return bool
     */
    public function getSupportsMultiple()
    {
        return $this->supports_multiple;
    }

    /**
     * Does object support multiple tags of this kind
     *
     * Generated from protobuf field <code>bool supports_multiple = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setSupportsMultiple($var)
    {
        GPBUtil::checkBool($var);
        $this->supports_multiple = $var;

        return $this;
    }

}

