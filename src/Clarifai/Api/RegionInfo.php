<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The information of the location of the Region.
 *
 * Generated from protobuf message <code>clarifai.api.RegionInfo</code>
 */
class RegionInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Details of the region's rectangular bounding box.
     *
     * Generated from protobuf field <code>.clarifai.api.BoundingBox bounding_box = 1;</code>
     */
    protected $bounding_box = null;
    /**
     * Details of the region's segmentation mask.
     *
     * Generated from protobuf field <code>.clarifai.api.Mask mask = 4;</code>
     */
    protected $mask = null;
    /**
     * A polygon of points.
     *
     * Generated from protobuf field <code>.clarifai.api.Polygon polygon = 5;</code>
     */
    protected $polygon = null;
    /**
     * A landmark point location.
     *
     * Generated from protobuf field <code>.clarifai.api.Point point = 6;</code>
     */
    protected $point = null;
    /**
     * Span char sequence for NLP.
     *
     * Generated from protobuf field <code>.clarifai.api.Span span = 7;</code>
     */
    protected $span = null;
    /**
     * Token char sequence for NLP.
     *
     * Generated from protobuf field <code>.clarifai.api.Token token = 8;</code>
     */
    protected $token = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\BoundingBox $bounding_box
     *           Details of the region's rectangular bounding box.
     *     @type \Clarifai\Api\Mask $mask
     *           Details of the region's segmentation mask.
     *     @type \Clarifai\Api\Polygon $polygon
     *           A polygon of points.
     *     @type \Clarifai\Api\Point $point
     *           A landmark point location.
     *     @type \Clarifai\Api\Span $span
     *           Span char sequence for NLP.
     *     @type \Clarifai\Api\Token $token
     *           Token char sequence for NLP.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Details of the region's rectangular bounding box.
     *
     * Generated from protobuf field <code>.clarifai.api.BoundingBox bounding_box = 1;</code>
     * @return \Clarifai\Api\BoundingBox
     */
    public function getBoundingBox()
    {
        return $this->bounding_box;
    }

    /**
     * Details of the region's rectangular bounding box.
     *
     * Generated from protobuf field <code>.clarifai.api.BoundingBox bounding_box = 1;</code>
     * @param \Clarifai\Api\BoundingBox $var
     * @return $this
     */
    public function setBoundingBox($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\BoundingBox::class);
        $this->bounding_box = $var;

        return $this;
    }

    /**
     * Details of the region's segmentation mask.
     *
     * Generated from protobuf field <code>.clarifai.api.Mask mask = 4;</code>
     * @return \Clarifai\Api\Mask
     */
    public function getMask()
    {
        return $this->mask;
    }

    /**
     * Details of the region's segmentation mask.
     *
     * Generated from protobuf field <code>.clarifai.api.Mask mask = 4;</code>
     * @param \Clarifai\Api\Mask $var
     * @return $this
     */
    public function setMask($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Mask::class);
        $this->mask = $var;

        return $this;
    }

    /**
     * A polygon of points.
     *
     * Generated from protobuf field <code>.clarifai.api.Polygon polygon = 5;</code>
     * @return \Clarifai\Api\Polygon
     */
    public function getPolygon()
    {
        return $this->polygon;
    }

    /**
     * A polygon of points.
     *
     * Generated from protobuf field <code>.clarifai.api.Polygon polygon = 5;</code>
     * @param \Clarifai\Api\Polygon $var
     * @return $this
     */
    public function setPolygon($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Polygon::class);
        $this->polygon = $var;

        return $this;
    }

    /**
     * A landmark point location.
     *
     * Generated from protobuf field <code>.clarifai.api.Point point = 6;</code>
     * @return \Clarifai\Api\Point
     */
    public function getPoint()
    {
        return $this->point;
    }

    /**
     * A landmark point location.
     *
     * Generated from protobuf field <code>.clarifai.api.Point point = 6;</code>
     * @param \Clarifai\Api\Point $var
     * @return $this
     */
    public function setPoint($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Point::class);
        $this->point = $var;

        return $this;
    }

    /**
     * Span char sequence for NLP.
     *
     * Generated from protobuf field <code>.clarifai.api.Span span = 7;</code>
     * @return \Clarifai\Api\Span
     */
    public function getSpan()
    {
        return $this->span;
    }

    /**
     * Span char sequence for NLP.
     *
     * Generated from protobuf field <code>.clarifai.api.Span span = 7;</code>
     * @param \Clarifai\Api\Span $var
     * @return $this
     */
    public function setSpan($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Span::class);
        $this->span = $var;

        return $this;
    }

    /**
     * Token char sequence for NLP.
     *
     * Generated from protobuf field <code>.clarifai.api.Token token = 8;</code>
     * @return \Clarifai\Api\Token
     */
    public function getToken()
    {
        return $this->token;
    }

    /**
     * Token char sequence for NLP.
     *
     * Generated from protobuf field <code>.clarifai.api.Token token = 8;</code>
     * @param \Clarifai\Api\Token $var
     * @return $this
     */
    public function setToken($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Token::class);
        $this->token = $var;

        return $this;
    }

}

