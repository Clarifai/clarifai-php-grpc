<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * RealtimeCount
 *
 * Generated from protobuf message <code>clarifai.api.RealtimeCount</code>
 */
class RealtimeCount extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string op_type = 1;</code>
     */
    protected $op_type = '';
    /**
     * Generated from protobuf field <code>int64 count = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    protected $count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $op_type
     *     @type int|string $count
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string op_type = 1;</code>
     * @return string
     */
    public function getOpType()
    {
        return $this->op_type;
    }

    /**
     * Generated from protobuf field <code>string op_type = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setOpType($var)
    {
        GPBUtil::checkString($var, True);
        $this->op_type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 count = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return int|string
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * Generated from protobuf field <code>int64 count = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param int|string $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->count = $var;

        return $this;
    }

}

